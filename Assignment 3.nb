(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    227918,       5094]
NotebookOptionsPosition[    220674,       4855]
NotebookOutlinePosition[    221244,       4881]
CellTagsIndexPosition[    221149,       4875]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Assignment 3 solutions", "Subtitle",
 CellChangeTimes->{{3.559413549292404*^9, 3.5594135543415203`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.559413558261691*^9, 3.559413562984859*^9}}],

Cell[CellGroupData[{

Cell["1.4.16 (a,b)", "Subsubtitle",
 CellChangeTimes->{{3.559412809546486*^9, 3.559412818636256*^9}}],

Cell[TextData[{
 StyleBox["(16)", "Text",
  FontWeight->"Bold"],
 StyleBox[" ", "Text"],
 StyleBox["The leapfrog method . ", "Text",
  FontSlant->"Italic"],
 StyleBox["The following discretization method can also be used to solve a \
second-order  differential equation of the form ", "Text"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[DifferentialD]", "2"], "x"}], 
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["t", "2"]}],
     MultilineFunction->None], "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]]],
 ", with initial conditions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["x",
       FontSlant->"Italic"], "(", "0", ")"}], "=", 
     FormBox[
      SubscriptBox["x", "o"],
      TraditionalForm]}], ",", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"x", "'"}],
       FontSlant->"Italic"], 
      RowBox[{"(", "0", ")"}]}], "=", 
     FormBox[
      SubscriptBox["v", "o"],
      TraditionalForm]}]}], TraditionalForm]]],
 ". This method requires only one force evaluation per timestep. We first \
write this equation in terms of two first-order equations for position and \
velocity:"
}], "Text",
 CellTags->"i:65"],

Cell[TextData[{
 "\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[DifferentialD]", "x"}], "/", 
      RowBox[{"\[DifferentialD]", "t"}]}], " ", "=", " ", 
     RowBox[{"v", "(", "t", ")"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[DifferentialD]", "v"}], "/", 
      RowBox[{"\[DifferentialD]", "t"}]}], " ", "=", " ", 
     RowBox[{"f", "(", "x", ")"}]}]}], TraditionalForm]]],
 ". "
}], "Text"],

Cell[TextData[{
 "We then discretize ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "(", "t", ")"}], TraditionalForm]]],
 " on a grid ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "n"], "=", 
    RowBox[{"n", " ", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["t",
        FontSlant->"Italic"]}]]}]}], TraditionalForm]]],
 ". But we discretize the velocity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "(", "t", ")"}], TraditionalForm]]],
 " on the grid ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", 
     RowBox[{"n", "+", 
      RowBox[{"1", "/", "2"}]}]], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", 
       RowBox[{"1", "/", "2"}]}], ")"}], " ", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["t",
        FontSlant->"Italic"]}]]}]}], TraditionalForm]]],
 ". \nIn each case  we use ",
 "centered-difference",
 "  forms for the discretized first derivative:"
}], "Text"],

Cell[TextData[{
 "\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["v", 
        RowBox[{"n", "+", 
         RowBox[{"1", "/", "2"}], " "}]], "-", 
       SubscriptBox["v", 
        RowBox[{"n", "-", 
         RowBox[{"1", "/", "2"}]}]]}], 
      StyleBox[
       RowBox[{"\[CapitalDelta]", 
        StyleBox["t",
         FontSlant->"Italic"]}]]], "=", 
     RowBox[{"f", "(", 
      SubscriptBox["x", "n"], ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["x", 
        RowBox[{"n", "+", "1", " "}]], "-", " ", 
       SubscriptBox["x", "n"]}], 
      StyleBox[
       RowBox[{"\[CapitalDelta]", 
        StyleBox["t",
         FontSlant->"Italic"]}]]], "=", 
     RowBox[{
      SubscriptBox["v", 
       RowBox[{"n", "+", 
        RowBox[{"1", "/", "2"}]}]], "."}]}]}], TraditionalForm]]]
}], "Text"],

Cell[TextData[{
 "In the first equation, the derivative of ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " is evaluated at timestep ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " using a centered-difference form for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "v"}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"(", 
     SubscriptBox["t", "n"], ")"}]}], TraditionalForm]]],
 ".  (See the ",
 ButtonBox["Appendix",
  BaseStyle->"Hyperlink",
  ButtonData:>{"Appendix.nb", None}],
 " and Sec. ",
 ButtonBox["2.4.5",
  BaseStyle->"Hyperlink",
  ButtonData:>{"Chapter2.nb", "c:48"}],
 "). In the second equation, the derivative of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " is evaluated at timestep ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "+", 
    RowBox[{"1", "/", "2"}]}], TraditionalForm]]],
 ", using the same centered-difference form.  The method is started using a \
predictor-corrector step in order to obtain ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", 
    RowBox[{"1", "/", "2"}]], TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "o"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "o"], TraditionalForm]]],
 ":"
}], "Text"],

Cell[TextData[{
 "\t\t",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " "}]], " ", "=", " ", 
     RowBox[{
      SubscriptBox["x", "o"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["v", "o"], " ", 
       RowBox[{
        StyleBox[
         RowBox[{"\[CapitalDelta]", 
          StyleBox["t",
           FontSlant->"Italic"]}]], "/", "2"}]}]}]}], " ", ";"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["v", 
     RowBox[{
      RowBox[{"1", "/", "2"}], " "}]], "=", " ", 
    RowBox[{
     SubscriptBox["v", "o"], " ", "+", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f", "(", 
         SubscriptBox["x", "o"], ")"}], " ", "+", " ", 
        RowBox[{"f", "(", 
         SubscriptBox["x", 
          RowBox[{"1", "/", "2"}]], ")"}]}], ")"}], " ", 
      RowBox[{
       StyleBox[
        RowBox[{"\[CapitalDelta]", 
         StyleBox["t",
          FontSlant->"Italic"]}]], "/", "2."}]}]}]}], TraditionalForm]}]]
}], "Text"],

Cell[TextData[{
 "\t",
 StyleBox["(a)",
  FontWeight->"Bold"],
 " Write a module that implements this scheme."
}], "Text"],

Cell[TextData[{
 "\t",
 StyleBox["(b)",
  FontWeight->"Bold"],
 " Use the module to solve  the same problem as in Exercise (15)(b) and (c). \
What is the order of this method?"
}], "Text"],

Cell[CellGroupData[{

Cell["Solution", "Subsection"],

Cell["Here's a module that implements the leapfrog method:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 ShowCellTags->True,
 CellChangeTimes->{{3.559560003466113*^9, 3.559560040148593*^9}, {
   3.559560083301146*^9, 3.5595600930950527`*^9}, {3.559560138142722*^9, 
   3.5595601393818417`*^9}, 3.559560309571505*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"leapfrog", "[", 
    RowBox[{"x0_", ",", "v0_", ",", "time_", ",", "\[CapitalDelta]t_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "v", ",", "sol"}], "}"}], ",", "\[IndentingNewLine]", 
     
     StyleBox[
      RowBox[{"(*", " ", 
       RowBox[{"initial", " ", "conditions"}], " ", "*)"}],
      FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], " ", "=", " ", "x0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "[", "0", "]"}], " ", "=", " ", "v0"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"first", " ", "half"}], "-", "step"}], " ", "*)"}],
       FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"1", "/", "2"}], "]"}], " ", "=", " ", 
       RowBox[{"x0", " ", "+", " ", 
        RowBox[{"v0", " ", 
         RowBox[{"\[CapitalDelta]t", "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"1", "/", "2"}], "]"}], " ", "=", " ", 
       RowBox[{"v0", " ", "+", " ", 
        RowBox[{
         FractionBox["\[CapitalDelta]t", "4"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"x", "[", "0", "]"}], "]"}], " ", "+", " ", 
           RowBox[{"f", "[", 
            RowBox[{"x", "[", 
             RowBox[{"1", "/", "2"}], "]"}], "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{"the", " ", "leapfrog", " ", "method"}], " ", "*)"}],
       FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v", "[", "n_", "]"}], " ", ":=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", "[", "n", "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"n", "-", "1"}], "]"}], " ", "+", " ", 
           RowBox[{"\[CapitalDelta]t", " ", 
            RowBox[{"f", "[", 
             RowBox[{"x", "[", 
              RowBox[{"n", "-", 
               RowBox[{"1", "/", "2"}]}], "]"}], "]"}]}]}]}], ")"}], "/;", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "+", 
           RowBox[{"1", "/", "2"}]}], "\[Element]", "Integers"}], " ", "&&", 
         " ", 
         RowBox[{"n", "\[GreaterEqual]", " ", "1"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "[", "n_", "]"}], " ", ":=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "[", "n", "]"}], "=", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"n", "-", "1"}], "]"}], " ", "+", " ", 
           RowBox[{"\[CapitalDelta]t", " ", 
            RowBox[{"v", "[", 
             RowBox[{"n", "-", 
              RowBox[{"1", "/", "2"}]}], "]"}]}]}]}], " ", ")"}], "/;", 
        RowBox[{"n", "\[GreaterEqual]", " ", "1"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{
        "determine", " ", "solution", " ", "up", " ", "to", " ", "time", " ", 
         "step", " ", "M"}], "*)"}],
       FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"n", " ", "\[CapitalDelta]t"}], ",", 
           RowBox[{"x", "[", "n", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", 
           RowBox[{
            RowBox[{"time", "/", "\[CapitalDelta]t"}], "+", "1"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xsol", "=", 
       RowBox[{"Interpolation", "[", "sol", "]"}]}]}]}], "]"}]}]}]], "Input",
 ShowCellTags->True,
 CellChangeTimes->{{3.559560003466113*^9, 3.559560040148593*^9}, {
  3.559560083301146*^9, 3.5595600930950527`*^9}, {3.559560138142722*^9, 
  3.5595601393818417`*^9}, {3.559560309571505*^9, 3.5595603385691347`*^9}, {
  3.559560389454075*^9, 3.559560391277082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"-", " ", "x"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leapfrog", "[", 
  RowBox[{"1", ",", "0", ",", "20", ",", ".1"}], "]"}]], "Input",
 CellChangeTimes->{{3.559560208093651*^9, 3.559560208205779*^9}, {
  3.559560295574957*^9, 3.559560296316036*^9}, {3.5595603525675173`*^9, 
  3.559560352645281*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "20.1`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], "]"}],
  
  False,
  Editable->False]], "Output",
 CellChangeTimes->{
  3.55956004951862*^9, {3.559560174780641*^9, 3.5595602028015633`*^9}, {
   3.5595602990112877`*^9, 3.559560353250598*^9}, 3.559560398696783*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"xsol", "[", "t", "]"}], "-", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5595600595376673`*^9, 3.559560059953899*^9}, {
  3.559560383054042*^9, 3.5595603836274567`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwd2nc81d8fB/BLUdkrInslLiFpOx/7ZoWQ7dpc+5rZSckqfCUJEUppSqWS
Y4XspMxKGSFUUpn1e/f7q56P1/u8z/tzPp+7eiThEmDuzkgikQY3kEj//iyI
dWFWcbusAX8lpY0MH256LW50XPwEIpHq2pVPPdL421x7Slw8GSwccvx6owZH
1qN7LANZ4MTJ9bCXGgV16WJM4pfA91JYfnRokL+6nfvreQXcwbpg26XxjqPw
z1r/VfA4m9iXTg3pa1vUV1bLwLkGCyPtGr6HQ/1+i90AWzc1eLRqPOgbLV3U
vgXmm3v3rFFjxcdo5LvnXfBUM6dgjUYRw0jyb937YNPmeYE7GjqdmTK/+ivB
pE0TeW4aU7n69YveVWDlkZXLt2vT3Nbtf6w+BO/bo70R175e9cr+JvYEPPBg
m1JPbViLqPLX+0/BswQpqK9W6L++9jntGnDaUFnFQK2LPLHhiycG3xUbCBit
ZVyN7F6Mrvu3n9BRt0+1faOWIou69eDlNUWd8dqIW6xPFvobwIvkpeefaw2y
JpkXihrB/tfuWk7XCkfUW3z3bgJfYPXsm6mt0w7/9nX1BVjNoDJlrjZrp7nG
16bmf/Mm8zXP17pxKqbNp7eADwrxfvtaq/5z09CcVSsixccpHDjzrXbT8Kcd
c2IvwTe+vef8XjtQ9zx0dgpMcm67w7BQe/NabuOX+21gdKEl+0dtdFow95fI
dqi/M/NR6metCd3EaUa7A/K2WxW3ftWKW++8Pc3WCQ5pU1Fcql04vHF16s0/
m4uOlizX5mx5mvPZsxvWPy3WCFirrQo3oAdv64G86MuVhvXa/Jm9gj+i/5nV
OnXL31r/Hh7PBd1XUJ8pWf2EhI9rkzjoN8Gka2bMRgyYeDRX9Z2jF5GIUv2a
QQa8c+ewXVAwmMQ/8diVEfPktzJ+7/+X2zUwfWHEqxyPbgQeeg12pcxHb8Dj
J0tMvxWB4/UPqpzeiDsXM34HMPUhUp1oZGsqE37kGVv41fuff/KdPs+MbXer
HZhffQM23pcdyIK1r0l89KO+hX504XxbVkwW5Dw71wSuK7eI0GDDf/5Mv5lN
74f8bsCORXb8Oag/2ncBXMfNdqOZA/eMN0nNWg2AL+y3z+bE1ccr23ye/XP4
+427uHBx25WgL2KDiDR6v+FYFhdezH0o/yFt8N/9/vJljQvrebaP9S7/c1R4
Ygk3vrTnY36zxxCs/zWkZMaDZzf8tnz6Gkx6rqO0zoP3HTY5kJw0Av0UndYy
t+JUVrcf0YtgcSmhbiV+/H7wxK1A53ew3jGIq5UfJ4aViVoffA/1Yywu3wRw
v86zfsNycFHJlr9x27A876sMtPUD5PtmpNgFcczHySO7E8BFbK3OuYK45+4a
446v/3LXEE9JIcyDtjiyK40iEvUKK8OYED4om30gyQ08+tbuya3t+NzijR+R
r8BFqZHpB0SwWuYbd5eKj4h0L1KjWFAcO0ZQtUY+gusaPAJCxHGS0xdRq22f
4P5h4bOd4nhIkWHgyGnwKDWPPUoCb9iaVtX4DNzzZbW/WwKT1/gzDy+ATRlI
5VKSOK6NbKDiNAb7KWW7fZLE5fcfy1ZcANeJMDkek8K9uVobZDrAXNbucY1S
WNrTumbb/nE4z052hSJp3LYhUYnEOwHzsThU68li/sPDPN3Nk4j07XbIcMJO
fOdu8rCv0gwi7dva2eKijGd4ZtIMnMHKF6/WFSrjHWEGGnLZ4KkqA/khZVx0
iLV4bBlcNxm39agKznqZ5mH74gvsv/ijSFkVh42d/65vP4dI1Z9z/Jd24yus
7ae4db8hUkTO98y7e7EnenVplv4DkdisFt4qIUy6+uvpcCqY72PebRrCuRuF
R9pKwYEu0WzXEG596SF64y3Y6xv3VXYCy1msXXU/sIhI5snuuXEEnvLaces9
w09EsjpgX2CviWlZMbU9Gb/AGhq9m7Ux48+rH/AN8LmwDpKUNs473kq62wDm
SG9cPqSN24R5tdMXwaoXlLUDtbHC9fKWI9a/Ubz0LoOtfdp49tnrngaxJUTi
2aR4P1MHJ4ouf7+/bwnFiyyyLZXrYOGTorzFZpA/EzjMWqeDjfS8LeNOgSeE
9LLndPDtnj+DBz8voQz5nV5yerrYf2LnWNWdZUTkzbELz+niUcfBzfUvwe/1
N0Yz6uFjA2eVOseXUfzpcvMiAT28r/3ziQmhFRQfOrj/oKYe3nC/jIs/CRwU
WNybqYfD5C3VJa+uINL4VIN/mR6eKtlor/QczCex+3W1Hu7Kcb2u9wMcdPzV
t/d6ODdaQiPcaRWR1vMEbGX1McuvHtdTkWCdJ7MT6vo4JiA++fwFcEHBnQP6
+tjF5UPf9XawtdwZA099TKYU+AzsXUOkt9v+7irTx4X1Rpnj5uCie5W7q/Qx
98G1R9/8wA/Hapga9fEvRTvGLaXgG86aW0b1cT2v4KX9XOuIRHfZv8BNwWrp
rbW6CuCXCq+4RSj4GnPEuJkeuGe1iFGOgtOW3+6iRYMnj/Z6HKbgP/QzlmEX
wTlMTB/0KThodk9UQiV4rXejqjkFW33Ibs6bAouXfnT3oOBWa53Zaxv+IJJS
1n9agRR8sPcH9wNRML/a3e8nKPiOYclevB+csG+7/ykKFn9h7tBuATaqjbmf
RsFZGoyn+gPAygUMN7IpmKn6fvlYCvjWL0vfPAqOUHHu+loGdiPe/rpCwTM3
uRZX68B03XnTMgq2l64T3DwCZskpP3mTgrsLAhDfb7A/S/m5uxRcldGVQlb8
i0iRln1GTyh4B0vsvX0UcJ0AM2MtBeedUnyr4wqu+n3icgMFx4WlSThcAgfe
SaK3U/DC14P63lXgNsXP17sp2M37i29oNzjRedP91xTc/ykv6+QMWNy+6XQ/
BcsoyYw0M5II0i1xVvMhCn4/szZvxAVuDt7WOUjBudf7GF6LgOfHnLnAZm63
+GwUwCwBzbIDFMwikbjjwz6whoGbIPRrPZS5K1YX7O+pvvEtBZ+xLtwrYg6+
9+rNUB8FM2ZU69v5gDs4G6x6Kbiu4sXRlXDwuafkPz0UHNvSe/xSIrj67sUL
MP/Kn1nP/oJ/6wN6znZQcLXQSkDYTTAjq9hwGwWHqW+K2PoYrPrHg+UlPD/m
fPFVjWCKpgxHC5yHn8TZYz3/ru9+d2kjBd9LVspYGAHPrlh/qKFg/7KDuZnT
4KpC1tmHFPxlxLK8m5EB1p/6XXqdgm8uudzz5wQXid53LqJgL77AanZhcE1w
GvclCh43TGk13AOenbhik0LBVz0v9sxogoUDZX4mUDD1VOlAsgnYwsYpJYqC
R57WTrV4gjM2d17whfv5tv2bRwi4mpTL4E7B1gsDS0wnwfY3Dps7UDA/xySp
LP1fP0PxWEsK7tv5Y7NOHrguiLLHGJ5HXRL32DXwqNnNCUTBps7sggkPwIvU
Di9VCu7I3bGzrgPctOK1TYCCU6rUVJwGwWt1rdZbKJjSo7n/zwTY1KXiv1V9
3LTJ/sihv+CO2CVWeH0mSHmbDbMyEqQlxa0mvfqYQGE2kdvAplHc2U36uCYs
w7taBVwTfknshj6OzCoIOq4B5mOSt72sj/fduXnilwF4X0B+Qjq8/l8+Pnnh
OPjQnP+5OH1cNdGUrOYGjrcRCArSx3SG3szXgWDhppdOjvpYWeTDJXoMeNv8
soSBPr5tsXzjXg44t9/WRkIf+wYyVx4tAd8zejfBpo/l03ifzt8FSz/XD1nS
w9caFdvIL/+/v+idbj1cqOoyU74K7nj1Fcfq4XNc7fLF1A0ESfnelbuNuvjJ
XpGHJv5g665L4td08bhjAFqLAledMSg4q4sP3ua1OH4RLOzvOmysi6eO2Mew
d4Ejxt0LB3Ww9qm57hMHN0J/lgyZbm3sfxPZ7jgCXvv9QPcmfN68yhzvswIn
/iYlndbG38TUl3fRwaMvfiXA509hTazkZDmYzL2ueksLL/3kDDXnZ4L8b0Cd
kyaWEnH5+1cKPBAR2rFbE5voVCXfVgGnkafYNmvisizrws3GYDdnht33CWy+
q7il9hQ4sWU0nInAt71UhRS+g633f8r+dgi7DFvgDR3MBClQrN7uoDpmufzR
L2gQ7PUq+0T7Hlxp6y/8YRK87RDDbvs9eMNQ0omnDJsIktzhAoM4NVw68HR3
0F7wtsNMcY2qePKNePn7q+CeMw4HyxQxrWc248mJzTC/8w+t60I46EWiS8AO
FshLRc0kdyDRcT3mX7vByquNqgfkUDvjlpvRBLjOV73SdCeSIdK/J9uAAz8W
ekcqoMGnF+JLU8GEarLmVmWkee9a4eBXcPxJYrVZDXFfbh3SrmaF9edviRpp
oPuBbMe2HWEnSOUBGae+UFBHHu+J21Zgtsk4KjqCJpuErmi5gRMN7uRlHUFC
gju/+MaBcy99PbbXACXW656qfwge0RceSDVEVjxxD2iSHATJKDO1bZ8JWnnw
nff5KpjZ+Myhx2aI7/3SfvMtnARJ/qC1wQczpLSZRP3MDy5lmNu0yRy52nPc
4lYFD6Sp3Lc0Rx0bFXQ8vMCOdr+U1s1RoaVbCOcbsChd+PAhC1Qc5TOjfJwL
noeKw0eKrZBy3ZalJAfwthtvehusUN3GcqYPrlz/ns/TguNWaDR9XDw9ELwg
7zS18zgSLXI4Pp0MlqTFyFcdR3lNR5uKa8BqJtfGqq2R/Jb5V0sN4Poqx00D
1uiJcdqHoy/BZephY7+s0cDb1pX1N+DT39Um1W0Q/7Smiu1X8MGN2u0PbVAW
u1ohjyQ3QUq/tqWwxBZJmvdWeMuBP0oZv8O26H5O4JM6JbDG1OZXw7aoR+x2
n/9B8HznsORWO8ShKsvabgEuId8oPWOHUqy2RZxKAjszPCuxsUdClx+dHkoH
B/28nEi3Rzc+WPynkg1+tbLAn2qPWr0y73woAh/sTh+tsUfMUSwTB5+CtQ6r
c4s5oIQra2aLs+B7Dd3xrx2QqXJ1kMIPbiKe8Vqo7JQDEq0PznRZhty0Mz92
zQE9/TTT08PEQ5Dco02kZBzRgszg0duiPET8S8FL9SGOqO5RdsC4NORTkbxj
SY7onL7p+e0K4PIo6oM8RyTv3dKVvBfqW5RLHbEjcrn10NjDFHLrqjOjG52Q
8uEgvwIryDsjAsO3OqE/neT0PnsegtAix2EZJ5T3taRDyxvyc58Vrug6oV7V
LEOxBMgr8xbUTzmhokZjH6uzkG/SjBnMdEL+FltS089BTq+eIxc5IZaw+LbV
PB6i6HFZ5sQzJ6T5xP/IwAMeou7YvsH8r06Iw0Dem/Mp1AtkXm9adUIjQxNn
9ep4iKl91Z+6NlBRxJp9a1UHD0EpDrityklFeunbpr70wn5Zh9/d5aMiPtG+
TVKDPMR4kUgwsxAV3UOG+pkTPIQcPjePpKkotofZs/ULD5GxuZpRaicVGTk3
nPn7HdanrNd/UKSiqYT9zX5/eAhlA7OESXUqEm/eoWsgwEtwJX38b6c+Fc1b
jbmdFOElSFnCeUMGVFTzuTCxWoqXEKdOb3M3oaKUCNvSrzt5iaIhkfetZlRk
vYW/SVaZl4gXYL/JZElFsnmvxhzUeYm6dPgUsaaiRfn0DRcOgb8HGtXZUlGG
0UbtDUdgfabunpdOVOT4DrscOMpLjK54HtvqQkVk/6iEIEvo9zMn/JAbFa38
Ub9abgfznN30W8ODilrPL9R/cIZ8txeXiBcV5Yjf+cjvBbaqn3nrTUVu970Z
TPx5CaLFMtvXh4pUtWQkToeAb51ieO9LRaTXo0RNJMxzvoxVwZ+KEqdriyNP
gpNt52kBVLSFVMC4/yyYN29XXCAVneOPcv19DvrPDMl5BlERj6JN08MLMI/r
7U2SdCq6qL1XJiQf+mtueh0HFrbdeka1BNb/YswMABcF/pj8dgPWHzVqUAXL
JL3Sv3sP6lelq9ug382Cu+V+jyFXTj2/D6xUlb6FXAsWP78rBvZ/0OZDm2mC
eqYb+pdgvn0fj7SXt0P/dk6TdJi/5vcOsmfvv3m4Ym38qEiTgzldZhB8z/3t
Olx/s/T43NiHf/0zBSJpVGRwsMHk6iTkJmoNnXB+XWZFd6lzkLvSti7B+R7z
iuUSW4T8pBT7Epz/QKx90LsVyOfiqB1wf+wvHOi9zMBHkHax2BlSqWi0Yttu
281gEeUoYQcqcm/49d82Tj4ifu/ycL0NFfl/rbS8IAyuZ57MMKeiBabMR8ek
wNYJGc/heQoXDhDgkYf1zK8im+B5iz+iMHhuL7gzINdVi4r+KymxP2sO9QNb
xSZ3UdG2pyef69mAVygSk/JUlN/jJMpEBbvXXa2RoaJr69tHT/qBsxxvLgtS
kTzfCkGEgP+mS/rxUtFd+YHiP5Hg458Sq9moqPp4tmvUWdjPgsqI153QIX96
0/7z4IHRimh4vdYnmsosXQCfSOH4PeqE2u6zfQ4pAXtatMk0wuuX9TTNvxbc
scvHMtEJUSVd28kvwAz5i1PBTmhinyb5Szs4MJ5V3tUJzbuvz3kOgs8kUa8c
ckIMdaFBzovgaJddaV8c0Zm3x3rFVsHmvVtvvnVELHMqu98zbCVIVjot6fWO
iE9oftGWEzw53HE9xxHJhnhEWMiDM6yDFw87IsUDH45dUQZHmksXyTkiNZL1
rhl1sLqJxGVuR6SVdmQyThvMmNzfPeqAHEvJFhX2YKHtI0XRDiinb2EX43mw
Uu/rpgp7VJDnw2p8Acxyh/VFhj0qpY5PXrwMzmfpKwuxR5WzbwoUy8GxPRVT
e+1R18YnrDb1YJLQBG+NHWLaE/f57g9wzyxye26L2FZ/N6wsg++JT3fn2yKe
+sBCXRI/QWoVTP0QZYvEjV0sh9nAklMx9N226JC7biOzLHjlkn9ckQ0KucB6
xcEanMKYKxFqjcZ/XrRifQ6mVdW6vbVEVzV3B79rBDeJ/jh33RI5pXedv9sG
1suIS46wREPSTC+PDYDNh9m0eS3Rq2P0g/k/wEu7v5TqWKDa+0biivICBKnv
0b6NZebooh/DjMlF8LYqi8d7TJDBBC0mK2gb/D6RmHN0OoT0YqRu6USAq51V
OwwPIq2tI0O/YsFcD8UC9h1AB3SN99mlgUc7T0/w7EPyZbt+SF0HF20a7+ra
jVjdF70ejoBJ5Q7qzrKoYzzGYkBfEOq9zfLfCmGT8QwFUVEhgiQe9LxiXhd3
KIz32UuDE9kZ2qL1sGHw3tjL8uAa71QbFn1MYXzfs23vvzy2vEqKgrXEFcJ4
TcFnc9YsjhrgPfYv6jYngAmBW4VVJli4b9nyxwRYqOwi+fExPNPoEt96ezt8
/7FVYtplj8UyB2jnqsC04zkm4fbYwtHE0uIZ2ORxoSS2x7VL++VHW8HX0s0s
jR1wliJ33++xf/nlygpXR3zwIt6xQ0iYIBUQfRw6VJxGE+4+fQb8nn5hr6kL
rt+b9cQwHdx5YY4x0AX/2ri5lDsbrEQ+n3TeBVOv/IgoKAb/ji+u7nTBan1t
kg9rwJU3+hv0XPG7wyfCxhfA4ecGr6u5YSXutyLaTiJEfNCzpzYz7ngyfTLh
grsIQdpL53dg9MAFLL8/f/YBG6wfEBHywGwbt1WmRUB9vxZ7H8UDz/yy0Xub
Cb6s26hS4oHLRt75ezeBh+9YtZp7Ynub+dfP2sD5oelPPT0x39s/+zheQT9P
d3uvaE+c0C224cE7yCefl/8q9cTUBueLa7/AYjVM8wueWLh8Ap/fKUrE+wyt
v0zywn3Sv6Q/7QLfpZ2wv+SFU4uZU9TUwfP5v2/c9MIreTssBrXA7YaPQzu8
8EC695SkPfjdMN8wmzfOYIk0DnURhe9nqS0mwt5YPymlssULnPif4SMFb/wo
viLaNxQ8zHc10MAb/xc8x/XonChRFzxxpjXRGxt8Ww/dfAFyrnKJqixvzOjH
MWx7GfKaGy22Rd440GNX2d/rsJ/GwMTAU29sYhO0/0g91DeZ1hXOemPmtycL
L7eAP9aPei554+fmWRvmO8E7ajn/bKBhstGDzqwhUYJg/6o/L0TDLOin88gP
UYJa9+K/W7o0HKEpt/nRCuyneH3mtCkNT2rb3TnPIEbU2c+xc9rRcAOlfkWL
U4wgPZWLUw6gYWXDxSJhfjFCnI+22BpBw4XGO/R/CUO92J947gQajjRP/++G
vBhB/flIreo/Gp6yqNt/SkWMGF2028eZT8NWx398sN8nRny71jOoWkrDqvY2
ZC49MeKeZ9jBwgc0XOSY1jttJEZYSwzvff+UhjmccUTjMTDv98vd9TT8xV3m
RZizGNFX2UFr7qJhWy9rH1MvMWKbYkdbex8Nt9JSueUDxIg7w5onEoZoWN2v
9vGGMDFiJGQudOYDDZcGfHd4Fy1GRMgZ4Q0TNMxDl974+BRYt960a5qG40OO
38xIgXmnasUN5ml4PizFlJYJ8z2dFw1foGH7E89/aeeKEfHYVtXyFw23RX3L
F7kC12uhktSxTMP7YqW0f5fB9fmJJXxdo+Fr8VbTPbfEiCIDt4CmvzTMdyr5
/M0HcJ53f7cbMvrghNM1exKfwvonfxnPbPTB35K+DjvUw/leXvEJZvbBjimS
CXtbxQgibYrCt9kHd6RZynF3Q/4ntMlriw8+cP5s18wbOH9u2W+BLD64PPNZ
SNMI9LOJaSCz+mD+7HmhwjHY/zN5az44MUeiPnwG8qrDJbXghVwLT7PvMI/d
oU3ZYOrlJHaFJbi+ve5PtoO7Cp4+2PgXPN3Dbgn9RXt+kb8yihPxNpekf8A8
lmZcJHtmMFewnfomH5zWu/N16xbwzTOPyEw+uPGY9rU97OJEXa6zYT9c70qf
/YmrXOIEUWPOuJfkg1Wswow4+cTh99ulbKN1GvbqPy8WLfDPOSnbVmj47WDD
C0tR6Jex3NgH589uN5LbIAHrLU/wvoD7ozPy02eXDNTX6Q37zNBwlAMnypeD
fEEvuxXub+V7OZ4tZNhftSJqaJSGp520JkJ3gUVkMouGaVj8o131J1WoP7f9
guBbGj7uEpp6VB36sfofr+2m4XNj5xxr9oOLV7o2v6ThF27lKjsPwzwhwZGb
G2h4baJ+Yw4BuTJmxPC80qYWbwboQ96T8cmygob152x/S1pCbjcwqJEMrxe+
U6/jrCE3n+5Xj6fhxYMVd0fsII/S6JoJg+c/ZdUzxwXMbsaf4ErDKzvyB7YE
gp/ZPeLcS8OmR5uqPILBtXgTmwI8X2GzGY1h0K9YpbJZlIaPvTh0JCYGPMjp
Gs1Ew7dc3j35lgK+wuS/3A3vLylMOcbnYL2xILFa742t7yvSb2ZCbkESr3ng
jZlIsfJuueDCn6+Dc7yxY4Ho5f4yqA9kDN1o6Y25Bpyia+vAvan5LM1e2ONv
kvX2JnD6F2OZB164RvaeWkQLWM1hG2ORF/YOJc2pdIH9Jx0jIrxwA0+xQ9kw
2Lu+8z9JLxxi/Ekj7RdYKTUh19cTt4WwbJ9eBo8luE9beGLxfNXfuuvgl3mH
/x7yxJ0zCXf/bpCA8wl83sLiiWXPSokHc4MJEptnsQceaHBjsCWDA43SGl+4
42+aQ0Ixu8D6e746VLjjTfVH1YpUwfP87i0Z7lgdH/Cc3Ac2Yvtma+2Os59x
ddJ1wZ+iJufH3fDRqprcVEcwyZDx7G9X3FzGp/w841/9k2u1X5zxe+mUI6P/
gW0CvuCXzvhnyV+XDRfBDCn6BdedsfTVmQtHCsDVbwxfU51xQmHd6psb/+YX
bGzoomKNi74t8w1gjnOLbUZO+OHZJkfxn+ABZGZubYvLDdq3JS2BUy7FOZJs
cR5bb+/cKnjz34b95TY4PuOD3jNGSYIkXyjV/cMaG+WuKFlxgTeaxjjHHsef
riv/TVUA55VXj523wBwt+Vd+O4MPdXBodxlhD6bQ0a4u8Oh+R0VrXuxKj3rI
licF3zeCRwSfWSN11fcPdxaAR2risYQNYlkgHukVgQ9U5wuftUH3gpgfx1+T
+vd5HtV/zBatBWZWL1aCvc7E/Ddph3ICrj8baQc3M+Xe/O2IXvq+rr+1DmZh
4U075YLyyeoNL0nSBElL3Lyg0gUFzuY2TG4Adx6gvf7kgvh9HRvFWcDfD3MU
a7kiF5/ppmx+cN/8Tce/rmjN+29L9C5wwfwhTV93tMtTocvIGWywoeC3ohd6
7y0WcNsNfLVLz9vOC6X58nJxeIFHqwlqsheaDlo16/YHzxTlbZ/0QiXR7W/M
osGv36CSy95IIMvnndVFsLmvUe5PGmrOdop9nPdv3tO3O8R8UMjFY2LbCsES
k4W3DXzQq/yDzoOl4LHDgkFXfFDqddYJu0pw+cULpTq+6G9NxSy1Eyy+vFc1
xg/dwVfS63vA7D9k5kr8kH3Df0qSfeAvC3uOtvmhJy1RgWNDYFujLatb/VFw
r+Gi+xR4T3XqvXJ/9Pnzl1XaBhkiPo69260mAOXMfMhvZ5aB33M5ByTfByCd
udeHySyQmzTMxv4NQMULz+LmuGQIoshd/Ix4ILJbT90QKArWP/JfmVMg6uYh
s4buh3rztD1MbwKRhp/f9OVD4MfmDXs/BaI7LXdaGhDU3/nQePhrIDoXrZLI
pQcmObvVbw5CRpPq6xXm4LNJZy/vD0I1RMRwryWsP3ZR1kE3CJEvP3mybC1D
1JlyH/hmGoRYTQ+F6TtBXkPak+YZhNqeaH795APzx552UPsvCB3gO9W5JQBy
vncCIwVB6KZ/U4UyHXJXGWOr8iCULKXvFRsBRmzsdTVBiJJu9FHwNNTPXOxx
GgtCL6jHX5sWwjyK3AnScnSk9iz3fnixDDEqF+khqExHpVuHzheWQj29Q2x0
Lx0lttkbzd6E+SxCHnzUoyMtNZcXSY+hvyqi3XWho8pzJSV3nkLOYnuS7E1H
ktPjJ988lyGosfeMIgPoiKHQU0OqSYb4prE/5mwUHdVt8ntc2yNDKJtpeWRn
0pGyy50LE69h//7w91U5dFRU8zWYrV+GEG+vGrp2mY7igujKtu9gPx2Ft39K
6Wi+/QHHyVGotxy56naDjhxlf85eH5MhNpcap1++TUcaw+E3fk7LEOVvzuVG
P6SjO3ueJAnPyRC5HR8fyD6hI5GMFXftbzKEjn/TaHENHaXNHNSh/ZAhhNXv
y8xjOlrTiZHM/CVD8O9/lsraSEe+V2pJ1csyRGvFgsjKCzoaWf77/v2aDHHN
9eXUk1Y6enYn4TJ5gywRTXnx4WYnHTEbWQpdZJYlEpHxzi09dGQ2veMSA4ss
oZw/PqrcS0f5Z1YEfNlliYilEhnJPjr6LNWZ85ZLltgXTeV994aOVOuvbNXk
g9y5sd65n45iHOnZFQKyxFKis/a9ATpqXdXh5d8O/Zhel7YO0hHvJYGseFFZ
gvqj7cvNITgP9RmuLxKy8PtwF//xYTq68brmvKWMLHGva5dgJ3gx8DxHnZws
0bPiNMo2QkeIwyVdnixLiAt2GvGDUyrU2C7sgnp/AbVpqH9D2ZT6V1WWGLVN
cToNFp8c3EJTlyXis523dcB+Pqdune3bD/ud53cfgnkeicdtQodhnsyF25Uw
L0Ot2ZkbhCxRRDBRLeF6jOykmfh0wJqn+xvgei8u/ToVqw/9z047rr6mo08X
XjJOG8D6D4xKf1/RkeLu/JPHTKA+f6t3VzcdRfT4k2rNYN7LP8S84bwb/TTj
5CxlCcKT37i7jY44WPn+ZFlDv4onfSS4Pzblk9HrdpCP/Ty13gTPt+6TVU8n
6K83zPmino6+fkqN7HUBM6fzHa+lowPxjsuHPGB9pz3fg6d0dFpEJeK6N+yn
63274BEdbbd+GxodCNe/9LqwA543j5/li5PBcP2xKeFb4Xm8nxUVbBYO9Qms
WB6eV/1O8SDZWMhvTvrUXKKjLNqPrxknZYk6rU3e+7Pp6N2mZv/VRPDsM8bE
c3QUrOXj25MK80qTm04m0FHth8NfDpyH3NHQXy2ajrbEcNHKsqDfG6bqB6F0
dOXxQ8/IS1DvpZW51YuO2skkV+nrkBdsyl+j0BF/W+/Hczdh/WJP72OCjpw9
y6jLtyHP6rbR2kdHv4sNHLuqwPsf7GyRpSMpgQs2EQ1Qr0kyzmKgI/8qz4FP
L+B6ZSUet/8OQk/MDhw3fgn7fSnY/3ouCB1N+2Ah2QNeZnvZNxCEohjkTTve
Qb/M63uyKoLQpA7rgOzHf+d/X3pjURAyPTvrdHIc+g89zzDIDkLSnHcD1L9A
/+vf91hFB6EOYbXzRUuw/jHPgLtBEBLdp9EVwrsD3t/CItqHAtHZKDGrbn7w
LoEj39oD0UIt6f1OoR3we5jRca4mELXoNs69FwdbFikFFQaiwGMU9iNKYC6V
4hx4P2/wNzcSOQLrY9v6HSoCELlyd1+4Efgwb7phEnxe/OSz7z0K1roqv+AS
gHyi+32SrMB3sCVNMADxpdinfncFv8p8MJHgjzzKPNpexIJHmihZh/wQy0gk
xb8KbF4zl+RPQ+rhN9jPPwYfO2+5rklDzjwDvXefgg/pTOlspaFqyh6H73Vg
tdFE/WfeyOPh16CQTrBq80TKRm9Uf87tcuQk+GRUTFa8J4rQNJk/s00OPq/V
UhIN3dDENYnsK9HgR9tunTazRbOJH5c3xMv9+/fDCpYuG7TgUuzkdepffTEl
xsAGkcQkFFRSwAltMQra1kjoonhDw0UwD6eMxm4rZJok9m2iEkzx4uP+YoZq
PEWMyNPgmovznFZaKFtOcOMTy50EyTcqSmtdE2fkebQ4i8sTpH09zo883HF4
WEJwtBSYqTTlapk7djQvFLsoC87kk6eMu2Myy9vwDjI4YCS5heqBX57Qldu7
H3zFiI1m64kZbaST2czBfi5puhRvHCrwyeDxKfCF54bxK77Y/sf6r1dnwBEM
nGW7/bBOt2DJbDL4admXIF8/zJNktiqRAb7rfGLzOz9851ddRVo+uJxVcuyZ
P556c4XN5aE8Eb8h7/2L/YHYNtuhi+0z5JsvOKz1BWHhByzbfWbA905xnvka
hD+8euz5cg7qbQ4y922hYzdOHoYzi+C10xK1h+nYP6V5918GBSI+sW/eqISO
E+J3XfourECQOLfPmHsFY50rIxNHxcFmO3zfxwXjTbXJqnekwHIcegoXg3Ha
6lg7TR7Wl8Rysb4IxjlhuX/G9oJNV6hdoiH4hi+D21tzBaLunjJ16mUI9k29
c0/NCix/65Hc+xCsdNNuPcsG+sloS8kthODKzw9zjlLBNQX3PQRDcY0L7WWr
nwJBbL7rttkjFPdYv1Z6dhYs4SHyczEUZ4XHRwmmQb8/ed/KmMKwZY5ia/h5
2P+GpRoffxgeep3krJYD9TMDWQrqYXjc5FD27RLI7wf6hoSE4SWdsuUrtbCe
4WwfmgjD0c+unGqqBxtslzD8HoZJqnns001QbxwTu309DG8SOy+h2q5AUM2/
7mHnC8f8yxFHmvoVCPGCvnUBIhznBQS/nhqC9R8XAzIMwrHIpJ8D+3u4HtPk
6E6LcCz92iXIahzqr/ZpZ3uF4923jS5NfYN8o90r0/Rw/EhKX4p9EfarMmif
vhCOD+Rp3lb5DfvNv17TKwzHWknq9ZHrsH7ixtajd8Jx87qy4RUSmaCWd7cw
PArHR0IU3jRuIBM9PGZlOc/Dsamz+DQbC7hOmeDsCMd9/ULBKuxkQlwpJnih
Nxxbm2xdt+QiExkVQb8vDYZjp4Ms3Ff4of7dVes9k+H40/2NlxsFyQTXpXOM
O2fDsYfcX+kpYTJBUI9eGP0ejv23Lu5TkYJcZy7g8lo4Xkidb7CUJRPfgna2
FjJE4FDGaaPInWSilb9FzoM5Akd/fUdt3AWOGqVpckZgksfAzGdVqOczTbfk
jcCJI70hbOpkgiT9Y3WPQAROfdly1vIQ2P0hk55oBOYgGngiEZlYc2XpCpGI
wFmPavILtcjEJ6d327ykIzC/4mPZRl0ycf0z35TYjgicV3L/3mcKmdifr6+R
vzMCiwrdOsBmRCYWP0uKvlOIwMUZ15qUj5KJzQ9fJX9SjMDSm4pNLM1hP1nX
hFu7InB5zOWBE5ZkIs1UZdNBlQhMXrzgUmgN57Wmv/WcagS+R8uYbbCDeu/2
a2W7I7Dax5Swz45kYkDAqfKkWgR+fPw0ic2FTNRdTZOX3BOBD3TFpSi7gy/J
r58B1+pE8ll6wf0bo8SUgrWehRSe8IHz5NwkFQduVgmQK/SH+8X0PlIUbFDu
XdkQBLkye0sC9O8UdTv0OYRM3NsqrXUL9je94NjMGgHzZXmLXob5+lhtTJWj
YD457dNHYX7rhGNDFrGwv3N+zku4vpElY7cTJ+F+m5l4bVGKwNQAynxBItwP
mSQmTnIEHpvQimhIIhNFb1X8h+D8tK50XZVPhXnlz/6nBudbZG3bmXUOngd7
JmkDOP+/3JO/VzJhXrGuOSG4P47tQZKuF2D9IY5b10Qi8PPEdaP2XHDMVuY5
wQgsrJEcvjsf6ksGI1q2RuChe0UdG0pg3it+sRfYIvB+Gvm3zzUwb5lWzqYI
nCtVLdF3A/YjvAqPMUZgq5zusNJ7MA/V+SXT73D88KhdMVsVmRgV36C4+i0c
82353B7y+N9+ekfvzITj3qg/4rq1sJ8rajR+F45V9qQY3q4nE/H+q43734bj
jPmtYVtfQP+1ax8+dYVjE2fF9ol2yC8K0mg4HLfp2YeeGYR52ChW0vnheCdp
6sr8CJxnS0FyeVY4PvskuM1qFOznpj17NhzrkVPFdnyGfumF8lUh4biB++nL
lkVYX/Jo/ciRcCzRrru4awn6zyhe6z4cjuMTX4nmroJHMo7zqYZjjd9TwV6M
ikT8HteCVMFw/HREQHQLlyJB6r89bz0ehgVzSihBvIoEoWlzOvBtGI44uit4
kB/qmd1CDVvDsHqDXusNEbDNHhbjijBceT2UbqAAPhPWEusfhrmdGQoqlcDB
3BaVjmE4UCi9RUhVkah7bv/9mkkYVkovFf6yDyxT8nueHIZv0l83p+rB/lkc
WmaTofjqYZXtnc6w3lDJNsgkFDeYsJxadYPcM4uj9WAo/uQ0NrPTCxw40p4j
F4qlEi48PeMP9U4iyzwMobi0edmGiAKLazE03w3BZUcbch9kQ/1IeeqdjSG4
mXqZ9OkiuCFXI3o+GE8GhXhxXQbbcO152R+MZbNl9/kVg10NPQRuBONrAyn9
snegn3v+9YIjwbjc+Rh/Xgv4+q7QjafouJVOjm1tA9e9PRjmTcdTp5gmf3XC
+hDW9eCjdCx37fHDY32QtzueXhSk4xsz2y3ZP0JOVVfjux2EbwaP/xe/Anb5
FX25IxDfPh3K7amoRJDOrgxQ2/zw7CGHhNPK4PBLhj5pfvB+ofOjZDeYu9hm
wdgP33ThezO6H0zeaqzc6YvL0YNcW71/uQH3QqsPLl3+JmbiBP6jfCzxsTfO
8/NV2pMJFn0pUnXcHSdZuhpu+Amu6fAyfHAc7xkpvpHUuQv6SRZ1IUvEpeS1
dLcHrCdwWG7WEs3GKekPvAaXq/gezrVCpVLPxuWGwHXHxvy/Hkd8Pn1ibZNg
Iv4L9yVbtBK9wZCZpEyQ3hZuju53QoOs6vUUQXDmsuAlcXfUrHZpakQIzHyv
3j7YHVU5rHEGCYOVu52Mmt1Rxt0Gx0ti4K26NV4+Hohy7OjatAy49KylbKUn
qs7z2puqCp7mE0pWpqHcnZdvdxr+yw807OIIQIs/9MpOGYPNpzbuowago7UL
+fuPgs+ZKTE8CEDMxwzSysyVifjndwLvKgSi0OhlWowN5KvLeq6dgci8+7ic
oifkHxQGvzPREVsoX0laAuSazEry1iHIC9XlaSVCzn89ey4qBDVu8c1aOg3u
0YoPuBKCIgsbT7olg004jlyfCEHTLXTqoQywwJGaF/6hqFnolchsAXhysvVm
aBiKq0vPNXwC/QcueYYej0Az7+qyl5+CpVzatwZHIKvVHxnXa8DWW/l8zkUg
srpt8gb4LCYlWq4pN0WggQrZyGfN0I/rwC9x8gmkehHbKfRBPnzXQOnbCVRQ
tXB88A3kV+XyLm6KRJt7ZSyS+iE/RGapFI1EH9jSjMaGIDfNJy8ZRqK0BOvD
lz9CvqyEmq9Gokm/76KsX5WJukxzoRHtKGSWKr39yTfII9lP1VlFoZry4wKe
C7D+2xenY95R6L+x55yNPyGnrRqfSo9ChE0KKWoN8qY3L9l6o1BF2PM1uT+Q
92SGuH2KQvzZ35be/oX++jnGvgtRaK7L6rvqBhU4/+EPUjzRKE9H6tPMFhVi
dF1V6Y1xNGJysXqfywr+G2X7wy4aBcYlD+mxqxBFe8Mcar2jkf7Tr71XuVSI
Ol63ANvEaLS4q6bRVkCFEN/5K+P2w2jkZPwVbxYEoxJftfpo1EaTrHkkBNZU
3JbaEY2Kys5W8YjCegXOBbdP0ch4u2VZmzTk68uye1liUO64Up2dLOzv2Rld
xxODxm9vHp7doUJkVNvMk7bHoGiihotTQYW4Z7qJ87p8DGrdkqNQRFYhvm06
2sOmGoP4XgfoqSiBvQN7du6PQbfcpaKPqagQ1MqD0il6MWhJaT1nXBWuvzps
qNMoBuksvb0fqqZCmJr0UgbNY9BwSsrni3tViKnHjhFijjFI1sKNced+FSJX
YVrCyjUG0UU0RJ4eUCGWll5SdbxiEMu97+Yjh6G+WMROPygGWZ1o9/NDUN8k
Q7IPjUFXtcrO/iFUiIH5eDa5EzFonjWu5LwWnKdmUUxFdAza/8a6VlwH5h2y
PTYZF4MSC1UH7+uqEN5tVucHEmJQjyfbopa+CvGGga6WcDoGCatMcvRRVAgr
LQW9saQY5LWCd7obqMD3b9bW1eQYVNV4SeeXoQrREcb2vD01BpHSg52SjGG/
ui1nj6bHICMr48htR1WIfaKWD86cg/MW23HhhinMFyv/X+h5OO8p0r0D5nA9
XYeOCmfEIOXKobb2YyqEl18taxQ4Oqpqwt4S+u1pm8oEt+icI81bqRDVWR0M
zmAeDq/tcdZwfwpnfaegn2O/pjqXLdSbhB6QA98s2m5WbAf5LY0Qcdj/l/dP
H1UHmF9KQORVWgzS2t19ptFRhVDuJysfgPnPrZUXW1Dh/giEF9nB9Q29SKiZ
cFYhSO/FrPfA9cuet+8Pc4Xnw3tub0si3B9r9YVN7tDvSwU/N5xfrQQX+yUP
uP+7LMw54HxZvkzvkPeCeZKbikujYpBlVaPWM294Hth38/8Ij0FFMQUORj7w
/GWnSK4Ex6BZvfCId77g8U7y0wC4P4Pyd/4GwPP7YNt5Dw+4P1c3vswIgv3Y
7PyOOcP98X0/JhEMPtBnsWIXgx78yRTUCYN5n4wVh5nGoD8tPmpvwqFfvgin
kUEMMsjUPepxAurZb/03rB2DPkktJ56NhvmGo5Xk1GOQ0lzvFcFYmK9P7dm4
UgyKfHTr6c04qD+90dB2B5z3Eeq3jgToF0n9SRKIQZr+LXbcyTCf3GferwvR
aGVgWq8pBfZ/tOrvMxWNqrTZVMPTwPSfWrnvopGsoNnmd+eh/7W13RtbohFb
01BVeQ7kHIw2UjnRqFlp/YpdLvTjeHNGMjkaxV0SS+XIg/2HMxweRUWjBX83
55ACqF/zEnV0ikYDgvPsRCn47fFrfySjUVYi1/JCGTh+0XgHbzQy/Ko6XnYd
9vM0td24IRrVNoU/Za2AflYs20c+RqHSAAbP/vuwn6Lp7ZXLUSjwBV+dP4b1
emrcjn8ikbzy3gqJelhvczXZcjoSjeXZ5PQ1QP05Pj7mvkhkFVjoe6AZ+m2i
82WVR6JD2+UEmTvBMtzGqibw/hx0kF4wBP0E9ij5JJ1ADcMODqYjYJ5bDq5+
J1CUXjxlw3voT40dEzx2As1vfyHq/RHyAFJKncgJ1Nds0q429e95CbKRuBuB
rgi7SHf8hFz6Q1lMfTg6sFtByeU35J+GNJtKw1HfkcW9S0uQ874tepsUjjaH
nzGUXoPcuCzC3jgcBb66SY9mVCVIUyzu9/rCEHHmRx2ZE1wfEcbxNhR9+pro
kC4H3s/0vOx2MIpmNvGUklcl4m1D1iySgxG/iEDQEwXIdwfJjbgFIwODG4kT
SuBK9t8B24NRZWlnxeE9YDORbYGn6eiUDf/KnCasD5N0ETUOQtKN13NM7CBP
Wtv9KdgPdZGXSkfswWdb75qK+6GIHMoDmiPYKEosvcMXtXtPd59xBof41PlI
+yI6l8IW7Al2WKl7201D2OFO1K4QcGC/YTWXF7JdqqJypYNHhYvIbi4oQ7FB
vrcWXFr3KSTzCPL4sfHVS/ndkDMxVz92w443dbrsyWAx+u+7Qu7Yyjmx/asi
+Pl6NzXGHet1b2jeqgJ+VXX9l6YHlq1gfOa8F5wo0ZfZ6YknXEhly9rgdtfg
TSM07Na7GrHTYTcRf5zTtsAjENsnHwyrcQRXOh78mh2ILYio4KNU8DPTDo7G
QKxzZ8Uv1BXWN3lcfCoahKVTll3qvcHMW4wG3wThMc3fRjZhUG/3OGb2cDB2
ub8gnnwevJgoEDobin0Tjq0ZZIKPUnfGCYXh0GNV/Wz/wXp54XMHKGH47M/Q
cxk5kNvsEnt5NQzf2b+8erEAcsrVbZ5W4Xi5/u/baxWQ65W+v3k/AjP+R630
ug05NbspezgCs7nVp8vfBa8oO8szncCizKd07lSCLaXiHY+fwDoGzJUPn8B6
BavdoysncEYvW3pTC+Sdt1GdShT83vbzOvMS3O9awng8CpeEdGlT2qGeBzvO
RkXhR/wZK+1dkHPJ6ya+iMIjtrxer9+ASUu371tG4x1jgtqfxnYThN7qp51u
MVi5KlK0dGL3v38P6jVIjMEHTg8vu3+GfmzX2dxLY7DRjoJ70zNQPyEZu2E8
BtN9xEW/f4d6r9Uf9xxjcfShk8uVP3YTda1Kfi7Rsfg0+6e+kJ/g2ZeNdy7F
4ty7JalLS7D+fF+/wOtYfDV+o+fTFejvFy2z52ssrjBz14peg3zb9oB5ljhc
JdksovFn97//r1CsIxuHa3/ILv/9C/vtT5nepxmH/we6Fiq8
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 20}, {-0.007630560220276417, 0.007217950781194388}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.559412829420888*^9, {3.559560054783443*^9, 3.559560060393587*^9}, 
   3.559560358163454*^9, 3.559560398729933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leapfrog", "[", 
  RowBox[{"1", ",", "0", ",", "20", ",", ".05"}], "]"}]], "Input",
 CellChangeTimes->{{3.559560099035166*^9, 3.559560100982951*^9}, {
  3.559560365740954*^9, 3.559560365798431*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "20.05`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.559560369611909*^9, 3.559560406535698*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"xsol", "[", "t", "]"}], "-", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.55956037612569*^9, 3.559560376564025*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
xeSnZa/Mu8CCoq5HhKg4Z2qPJftXcMyxF4WvzHDu+ZE7oavg3UOLk12m+Pl1
/23u+2Xg+dnHI/LFCE+rOoZdlwX7FZ/8kW4E9wutX5kHwQpGXlYuRjjXlbt7
SBnsm+o2/NUQZ6OXKXY6YO6Wt5eHDHDWyqyA8TFwtkz3yTZ9nOp9WuZQPNii
/fKds9o4wvK4AeNvGfrfsziG5w7jQwOPciJaD4CvyAkvKSBOGY/lwnawh3G/
2eNDaPqKjG5vJ7jouruckSLKEn49Qu4Hmx7Wb350GHF7dQk0j9Hj0iQvHRW0
GsxowESShfcpycbEWIT6WBVr9HaB+bqG5da0UIPCvYmB3eDlwWc5RtqoxHF9
61k+8Gll2Z0Z2iiusNbpngDYb2TnHi0dpGdusj4pCt7yzC4yUheVp3ocvikP
dtNSYWeloBSJ+89bDcDON/I3TRqjhV86T64ZgW0ypOSPmCAT2vwDZROw6vJA
bKwJYjKnxDyhgs81UkN4TZF/8IrnZVvwqp3iwQpTRP1gTd7vDjakSf73ywyx
+XNnxoSBpwWHb+lYIA9UnaoRDvZlkJX0tEB1zKcTlq+DtQ7g0FgLdCmt7qpb
FLi8Vcq+0wJNNp5zVo0DKwn2FDlYoobdH/dOPwTLN2h+cLNCV6pjUwwqwGTP
wDRdGzT1ufruSiV4flRD7LgNslr7FfesCtw8v881xAZJK9pFMVbT11dGeP2l
DerNE7v0ugH88XLwJJ8tkk/G9lJd4B2bHj/5aoselsxb93WDb60lkVZs0ZYO
UYuIT+BNPeLsnHZokC3G8Fs/+EGZoa+aHYoJs1G7/xVsbzsulWiHxrzn+Fln
wAJWZUOK9sjspsieilnwxPzOWn17VJVtvdN9HnxE8ZK5gz268+3N1rrf4E65
9o5Qe0TYRpOC1sH8sR4KDfYoL+DNOvkv2EFlBvfYI567s8s9/8C6xOjqmD36
0WY1J88oB8+7AzxtTA4oVUt4eIpZDp4X3iWZGg5ok6vVlxRWiN+8X95s6oB8
r0T167BDXKdua66TA9KtnOl4zAm+nr6QddEBLRyoqrPbCflfNoiV5zmgY0Yz
eMsusNSheO8yB9Tsua+qdDfkzwpHDdc6oIwnkSVc/OCvN06O9zogoz2WT5pF
wLZLV7ZscEQpIzLV9mJQ73v4SxazIxp5vuW/aXE5gnjZdZeFyxEFE1WcW6XA
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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 20}, {-0.0019033887327706833`, 0.0018032788553749568`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.559412843931134*^9, 3.559560406659779*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.55956040893815*^9, 3.5595604119652557`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
xeSnZa/Mu8CCoq5HhKg4Z2qPJftXcMyxF4WvzHDu+ZE7oavg3UOLk12m+Pl1
/23u+2Xg+dnHI/LFCE+rOoZdlwX7FZ/8kW4E9wutX5kHwQpGXlYuRjjXlbt7
SBnsm+o2/NUQZ6OXKXY6YO6Wt5eHDHDWyqyA8TFwtkz3yTZ9nOp9WuZQPNii
/fKds9o4wvK4AeNvGfrfsziG5w7jQwOPciJaD4CvyAkvKSBOGY/lwnawh3G/
2eNDaPqKjG5vJ7jouruckSLKEn49Qu4Hmx7Wb350GHF7dQk0j9Hj0iQvHRW0
GsxowESShfcpycbEWIT6WBVr9HaB+bqG5da0UIPCvYmB3eDlwWc5RtqoxHF9
61k+8Gll2Z0Z2iiusNbpngDYb2TnHi0dpGdusj4pCt7yzC4yUheVp3ocvikP
dtNSYWeloBSJ+89bDcDON/I3TRqjhV86T64ZgW0ypOSPmCAT2vwDZROw6vJA
bKwJYjKnxDyhgs81UkN4TZF/8IrnZVvwqp3iwQpTRP1gTd7vDjakSf73ywyx
+XNnxoSBpwWHb+lYIA9UnaoRDvZlkJX0tEB1zKcTlq+DtQ7g0FgLdCmt7qpb
FLi8Vcq+0wJNNp5zVo0DKwn2FDlYoobdH/dOPwTLN2h+cLNCV6pjUwwqwGTP
wDRdGzT1ufruSiV4flRD7LgNslr7FfesCtw8v881xAZJK9pFMVbT11dGeP2l
DerNE7v0ugH88XLwJJ8tkk/G9lJd4B2bHj/5aoselsxb93WDb60lkVZs0ZYO
UYuIT+BNPeLsnHZokC3G8Fs/+EGZoa+aHYoJs1G7/xVsbzsulWiHxrzn+Fln
wAJWZUOK9sjspsieilnwxPzOWn17VJVtvdN9HnxE8ZK5gz268+3N1rrf4E65
9o5Qe0TYRpOC1sH8sR4KDfYoL+DNOvkv2EFlBvfYI567s8s9/8C6xOjqmD36
0WY1J88oB8+7AzxtTA4oVUt4eIpZDp4X3iWZGg5ok6vVlxRWiN+8X95s6oB8
r0T167BDXKdua66TA9KtnOl4zAm+nr6QddEBLRyoqrPbCflfNoiV5zmgY0Yz
eMsusNSheO8yB9Tsua+qdDfkzwpHDdc6oIwnkSVc/OCvN06O9zogoz2WT5pF
wLZLV7ZscEQpIzLV9mJQ73v4SxazIxp5vuW/aXE5gnjZdZeFyxEFE1WcW6XA
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

      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 20}, {-0.007630560220276417, 0.007217950781194388}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5595604127755327`*^9}]
}, Open  ]],

Cell["\<\
Error is reduced by a factor of 4 when \[CapitalDelta]t is reduced by a \
factor of 2. This is a second-order method. \
\>", "Text"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.5.1", "Subsubtitle"],

Cell[TextData[{
 StyleBox["(1)",
  FontWeight->"Bold"],
 " A thin rod of length ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]]],
 "  and mass ",
 Cell[BoxData[
  FormBox["\[Rho]", TraditionalForm]]],
 " per unit length  is clamped between two vertical walls at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "L"}], TraditionalForm]]],
 ". In the absence of gravity, the rod would be horizontal, but in gravity \
the rod sags with a vertical displacement given by the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "(", "x", ")"}], TraditionalForm]]],
 ". According to the theory of elasticity, the shape of the rod satisfies the \
following boundary-value problem, assuming that the sag is small: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"D", " ", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[PartialD]", "4"], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["x", "4"]}]], 
      RowBox[{"y", "(", "x", ")"}]}]}], "=", 
    RowBox[{
     RowBox[{"-", "\[Rho]"}], " ", "g"}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " is the acceleration of gravity and ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]]],
 " depends on Young's modulus ",
 Cell[BoxData[
  FormBox["E", TraditionalForm]]],
 " and the cross-sectional area ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 " of the rod according to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", " ", "=", " ", 
    RowBox[{"\[Alpha]", " ", "E", " ", 
     SuperscriptBox["a", "2"]}]}], TraditionalForm]]],
 ", and where ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]]],
 " is a dimensionless constant that depends on the shape of the cross section \
of the rod. The boundary conditions for a rod clamped at both ends are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", "0", ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["y", "\[Prime]"], "(", "0", ")"}], "=", 
     RowBox[{
      RowBox[{"y", "(", "L", ")"}], "=", 
      RowBox[{
       RowBox[{
        SuperscriptBox["y", "\[Prime]"], "(", "L", ")"}], "=", "0"}]}]}]}], 
   TraditionalForm]]],
 ". Solve this problem analytically, and determine the shape ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "(", "x", ")"}], TraditionalForm]]],
 " of the rod.  How does the maximum sag scale with the length ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]]],
 " of the rod, holding everything else fixed?\n[You may wish to compare your \
results to those obtained in ",
 ButtonBox["Sec. 9.10",
  BaseStyle->"Hyperlink",
  ButtonData:>{"Chapter9.nb", "Ex. 9.10"}],
 ", Exercise (5).]"
}], "Text"],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.559412935724638*^9, 3.559412936670322*^9}}],

Cell["The general solution to the ODE is", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", " ", 
     RowBox[{
      RowBox[{"y", "''''"}], "[", "x", "]"}]}], " ", "\[Equal]", 
    RowBox[{
     RowBox[{"-", "\[Rho]"}], " ", "g"}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"g", " ", 
        SuperscriptBox["x", "4"], " ", "\[Rho]"}], 
       RowBox[{"24", " ", "D"}]]}], "+", 
     RowBox[{"C", "[", "1", "]"}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"C", "[", "2", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"C", "[", "3", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "3"], " ", 
      RowBox[{"C", "[", "4", "]"}]}]}]}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ygen", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], "/.", 
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"g", " ", 
     SuperscriptBox["x", "4"], " ", "\[Rho]"}], 
    RowBox[{"24", " ", "D"}]]}], "+", 
  RowBox[{"C", "[", "1", "]"}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"C", "[", "2", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"C", "[", "3", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "3"], " ", 
   RowBox[{"C", "[", "4", "]"}]}]}]], "Output"]
}, Open  ]],

Cell["\<\
You could also get this just by integrating both sides of the ODE four times.\
\
\>", "Text"],

Cell[TextData[{
 "Now match boundary conditions at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ygen", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"ygen", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"ygen", "[", "L", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"ygen", "'"}], "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], ",", 
     RowBox[{"C", "[", "2", "]"}], ",", 
     RowBox[{"C", "[", "3", "]"}], ",", 
     RowBox[{"C", "[", "4", "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "3", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"g", " ", 
        SuperscriptBox["L", "2"], " ", "\[Rho]"}], 
       RowBox[{"24", " ", "D"}]]}]}], ",", 
    RowBox[{
     RowBox[{"C", "[", "4", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"g", " ", "L", " ", "\[Rho]"}], 
      RowBox[{"12", " ", "D"}]]}], ",", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ysol", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"ygen", "[", "x", "]"}], "/.", 
    RowBox[{"%", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"g", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"L", "-", "x"}], ")"}], "2"], " ", 
    SuperscriptBox["x", "2"], " ", "\[Rho]"}], 
   RowBox[{"24", " ", "D"}]]}]], "Output"]
}, Open  ]],

Cell["Here's a plot of the shape:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"x", "^", "2"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  Axes->{True, False},
  AxesOrigin->{0, 0},
  PlotRange->{{0, 1}, {-0.06249999703820882, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "And that is the solution. The maximum sag is clearly in the middle, at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"L", "/", "2"}]}], TraditionalForm]]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxsag", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ysol", "[", 
    RowBox[{"L", "/", "2"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"g", " ", 
    SuperscriptBox["L", "4"], " ", "\[Rho]"}], 
   RowBox[{"384", " ", "D"}]]}]], "Output"]
}, Open  ]],

Cell["\<\
The maximum sag scales like the fourth power of the length of the rod! \
\>", "Text"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.5.7", "Subsubtitle",
 CellChangeTimes->{{3.559413001438468*^9, 3.559413002280198*^9}}],

Cell[TextData[{
 StyleBox["(7)",
  FontWeight->"Bold"],
 " The temperature of a thin rod of unit length satisfies ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[DifferentialD]", "2"], "T"}], "/", 
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["x", "2"]}]}], "=", 
    SuperscriptBox[
     RowBox[{"T", "(", "x", ")"}], "4"]}], TraditionalForm]]],
 " (in suitably scaled units). [The ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["T", "4"], TraditionalForm]]],
 " term represents heat loss due to radiation, and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[DifferentialD]", "2"], "T"}], "/", 
    RowBox[{"\[DifferentialD]", 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]]],
 "term arises from thermal conduction: see Chapter ",
 ButtonBox["3",
  BaseStyle->"Hyperlink",
  ButtonData:>{"Chapter3.nb", "c:3"}],
 ".] Find and plot ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "x", ")"}], TraditionalForm]]],
 " assuming the ends are held at fixed temperature: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"T", "(", "0", ")"}], "=", 
    RowBox[{
     RowBox[{"T", "(", "1", ")"}], "=", "1"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["Solution", "Subsection"],

Cell[TextData[{
 "This problem cannot be solved analytically. We will instead use the \
shooting method.Let Tprime be the derivative of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "x", ")"}], TraditionalForm]]],
 " at x=0:"
}], "Text"],

Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5594130617295723`*^9, 3.5594130625029163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tsol", "[", "Tprime_", "]"}], " ", ":=", " ", 
  RowBox[{"T", "/.", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"T", "''"}], "[", "x", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"T", "[", "x", "]"}], "^", "4"}]}], ",", 
        RowBox[{
         RowBox[{"T", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"T", "'"}], "[", "0", "]"}], "\[Equal]", "Tprime"}]}], 
       "}"}], ",", "T", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tend", "[", "Tprime_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Tsol", "[", "Tprime", "]"}], "[", "1", "]"}], ")"}], "/;", 
   RowBox[{"Tprime", "\[Element]", "Reals"}]}]}]], "Input",
 CellChangeTimes->{{3.559413022365939*^9, 3.559413044213962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tend", "[", "Tprime", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Tprime", ",", 
     RowBox[{"-", ".5"}], ",", "0"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<T'[0]\>\"", ",", "\"\<T[1]\>\""}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVjX04FHYcwLUsoo1sRSTVGmbyeFkvz2FfrmGcvLUU2ZOXSqioUHvKhTrn
lGRJL7MSbsnL3YpdhL7eUnSPZN7yciehc17OcefO+cnaH5/n89/nsyk02u/w
Z2pqars/8b9vmmjLl5aEqPBvtjZiiqGCrG48vyhEr6G2UmWqGHreGlyfVwnx
CoW7sytNDIZZpjazciHSWuVnMq+KIUeTenx0XIgRs205mtliyJWeHeF3CzFw
52zifIEYihpGO29zhbgXM6pH6sVQHV7Pszv4qe875iX6KIZI8efywb8FmFR9
rLg5aRx0BnekGX0pwFem/u/lZBz6tg0lM08M4MDj5AB2/ATYNBkoj9X1o/E6
o128hQlIaHZsFJr0Yx4/XzpxdhL8NCSr+DF96HjIof/5sinwZhtUjjX2YmqG
t8qXNQVUnnV11pZeLNlmWtOrKQFc1mlfGf8Wn12QeAdnScC2NlwvqqMH/c6O
SD5oTwNfcMrTa1sPLr0u5o16TsP0Dq3lxandeNvsVtlXWdOgpX5N98aHLnSK
/9rKpHsaOFp5d5Q7u3Bez+GLpI1S+O2kZWp6eifuFRUq3CKkQKGx+dzJDjS6
5BzaUSoFxsGidJpTBxZsLLsjUUqhafRPduzdfzHdi2b0HGYgs9CYoi9px3sr
h4z3p8/AxZY1tuPUdmSbyb8J6p2BqIMk0TPvDc5Zvbf/uHkWBqyiPc1kbRjS
s4F779QsuJxsO5Hh24Yyzsq89ppZeGj2y5jvodfIKdt9/1dNGfS9M5k6o9WK
hk8eDWwNlIEq6WVuxQs+Gv6UVRnzQAaWN1meExGvkJwb67MjMig5Zo/Jei3I
fFfEOu8jh3XmLUK79peYcZEVuSZXDrf3n5zvjn+BtCdbXJMVclgRLa/Ntm1C
UrPpiLXHHNS5RHpXyBoxKoTouubMwbVMRRf/jwaM+rkhjDU3B7SGkFUkoB5Z
ZsRaRFPAushhyobFWrS4HxRY+1ABhZNMK94JxM13NWLzP1NCNdM8Ti6pxv7V
adpqB5Qwp60qNbR/ilVTMjenaiWsDGJQ48qfoIbaioVgg3nYle3c/I+iHJOG
Ay5jwjwY+goHqtwe443xK7qDQ/OQxT2eM3WZi6Kom+6PqCpwzqSH2KwvQv+g
hiRqiQpytZYLBJpsjA5aGIrRXQAKwyNeXycXlzVVGVJiF8Cp8MPIDr8b2GUZ
GOYztACDYmqOJT0FC8OUIa89CER4e0rstqTgAP2hjO1JYKZsL9W+hYEaySVF
570IqCccFbmvZeCp5ppECz8C5jpXfwjnXMQUv4JOZgCBGLu3/PuCROyqPPSd
+1ECSwqBais9HnUkymujDAK6ddJch5Y4jFw8cKuOSWBzmrobbW0cuomeNeSw
CLiut7h+lHMaK8LupOxJJ3DVKe77fEEMGtyj1tRnEXDQ06+wph/BV242sw/y
CQQXOKh7rT2Mp30sHBlsApe2h/pEccLQVHmuOPQBAX5gqYgtCEbbBJAbFxPg
uTJtt9P98S+tYcfsxwQ+Rra3xHD24DD3x+LY8k//DOOwYoEPejdscNzDI1DE
DTdzprvi5CNGq+5TAhTl4j6ewAmTW/VbJVUEfk8yX72Pvh3d+11mWmsIhH1b
NJxMN0XKhTX2HCTgcVj0pnbM5Vn50uXC9DoC/wHlA6zz
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"T'[0]\"", TraditionalForm], 
    FormBox["\"T[1]\"", TraditionalForm]},
  AxesOrigin->{0, 1.},
  PlotRange->{{-0.5, 0}, {0.8289924576626778, 1.7972542365896347`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.559413016076477*^9, {3.559413047383841*^9, 3.559413069299756*^9}}]
}, Open  ]],

Cell["So the correct value of Tprime is somewhere around -0.4:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tend", "[", "Tprime", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"Tprime", ",", 
     RowBox[{"-", ".4"}], ",", 
     RowBox[{"-", ".42"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Tprime", "\[Rule]", 
   RowBox[{"-", "0.38975321111922456`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5594130164205914`*^9, {3.559413047527761*^9, 3.559413075030478*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Tsol", "[", 
      RowBox[{"Tprime", "/.", "%"}], "]"}], "[", "x", "]"}], "//", 
    "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<T[x]\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.559413084602364*^9, 3.559413086185348*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwt2Hk8Fe0XAHBL3hQRkixZKhKKJCrLqYgKRSVLryVUlFdIRRsKoVC9JZUt
VK+QyFapbrpaZKuU7boz97qWMHekIvvv3M/n99d8vp+Z+8zznLnznHNGw/vo
rgMiQkJCssJCQoLj9gN9nxjfnSycap9NzMzQMMtSKYhQNILRjar+Yug1malp
TxSt4DDPWEximgbb+paSdMU9UGoW07xwkgZn39EX1xR9wVd6vNHgDw2d+hct
ExVD4WPAaqPAIRqy5HfGJihGg76vQ7wUh4Yo8SfL4xWvQ/LrC9K8ahpcXO8W
Df3IhbtpBZcVo2mQmIn620a1CEzzDFIy7WjQdOT3vblUCi4RiotUFGk42bAe
Un89hQrGclF3Hh8USmXYwsKvwOyErp1wOR/KuZZ1jWbVkNN6qrUplg/Vh9OV
XQeZkJMVcy9yHx9+a5lLF/7zDlzI5QZVa/kgMpY/X1mzFtryKoZSpflgPONV
vvtRHUQ4tZSm8CmoizZqeKvTCBdK31zKaKJA7crAWB6/CbYXFO6vKqFgYJRg
fzX4DNZOROK2WxTk9j+vlUr6AvcJh1+OkRRILX5A83jNwJ20ZAccpuCyf9nB
rGXfoDb29W0HFwpGNubz/CJaILZoNFLHhoKq3IE7J6NbgJiWcaetKTgvrrc7
Nr4FhC1muZeipZoKXuf82wIF4gHvLdBano8y2A9aQMRnhb3TFgr2ni122dPU
AoWq3vPiLSkoe1pRBxqt8DtPe7/ERgpCDZmlC9+0wt3vlsqn11Nw0Eg96+r7
VpiJhVIrtIvxmUuSDa0gkyByUgptusHIW6StFZ58bwvPXkeByOZcaT6/FSY9
CkLrTChIdow+XKPUBu6vv5prG1PwMMhKPTSkDTz1FBfOGFKQFpIlQZ9sAwnR
59316MTQyRH/s21gvmuGnYYOCiut94xrg5DJwztM0SaRy07bZrSBouZj9VOr
KWAmz/q2pLYNPkiJXJvRp4B4xLz0SaMd5rmEZa1YSUETNWvQcHk7LLaVPDqt
RwFDb4vddb12mDTOPvAFnfWwRtLZpB1mbW+qPYv2vv82kWWH598oH2/WpaAn
/X1y78l2sFS+vzVehwLqct2/U/Xt8LrwYPd8bQrYHyV/eXxph2m3qJL+5RQ0
zLXfw2hth2qD8w+Y6Edx9QsudLXDD/k1c8LRQdENN8TH2uGNiWl+lxYFv043
3ZRb1gHta9b4MzQpmDjcfGfFqQ6Y/Zf3u5tLKdhj7H51VUQHXFsz/0MYukC4
J3ZNdAdklnhTrmiP1NFg86QOyHIbTldBv65R2uqY3QFKAQUZOUsouKi+/1dY
bQe8SpRSrdSgQO4bZfdeiQW9zcz5E2oUBNw9sblejQWpvtQBEs0MmDH5vIwF
xvp5nTXoE6IyS1mrWDB0ttXoKrrNwGiM3syCC97i51egMy+duqdwhAXiwZtv
eqlSoLtp9vTB5ywIaenP61Oh4PHD/OWtDBZMXPQIakIbLXBw3PaWBaGfDnhW
os16U3N1P7EgVmFlRRx6R6KO7VAPC0wnk+110SFt9qnhsp2gHWIsH6aM78Pm
4df9Cp2gVn3f1xt9uiBlYN/iTnB4ks2yQ0dHEBYW2p1w4rap9RJ0imZwt4hF
Jyy/wZtpUKLgafB1w8v+nXCOeiRpgLboWPf3VGAnzJmdw1NBV1t1xgSGdkJ9
gXL3HHStglabQ0QnlIykevIUKWC9qIiQv9EJv7QrN9xBC83tqMtgdMKE3Or4
+WibbI1DxQpsSMs5Ha24CNebKqX1VoUNiiaebpJo9aQJXrsGG+yaEnbPKFAw
Hv7Ve5YeG4oVnhZ1owsd4z2cN7JBxPSIdClaTviH05QfG0okho84o4VGOxfI
BrKh5tP6E3bowcHaL1rH2PBhvCZnE/pta66jw1k2+OQ+9NNDhz92sc+5yoam
6sxbomjCk2G17RkbDN5KpVYuxP3LqVDU4xUbrG7FfCtCV9rerg5hsmF2q/m6
B+hrJqEb0xrYsG44+EAKeou0thnNZYOQIe/gCbShmPyEaB8b7ozsfxWIVp0Q
fraIYkPkgJrpIfSfng6TzaNs0Pu6L80Fnf8yec0NCQLCvjWKmaNTS88M580n
QNfGNswYHf3Qv/ilPAEJLWJSBmiPFEv9PjUCHnaY5CxFywSO6pgaERC59nKo
JHrah/d953oCBrynhGaj+10//edrQYBqbcFjYTRzS75W0lYCUoma8FF5Ck4u
9lzC+ZsA30h2CQ/t7WCwl7WfgL3ebwNJ9I4LwgktBwnQH7xsx0Jrfc/5UR9E
gGl+2T/NaFmV45ofjhNQ/1yhuAk9tcPalXmKAFFdl4X16ObSPsazaALY3GPW
b9GM3qe/yuLxeomdMm/Q+UqXtIuTCBjdLT79Cn0+cuWVB6l4/zny5s/QgU+m
32SnE1C9zy+5Au3a0ziank1A681bomVoA7sQz+sFBKzJuOH4GK0SYflvcjEB
d3Z56T5Czy5Z8C6hnIBhpvjyAvQwr3s85jkBzQNJVg/RbIWKVVEMjP/L4Qv/
oWu3x3mfqSGgzMio+z667KxryslaAqasd/vdQ2c91qkNaSRgP3/nvFz05a6J
qX+aCUhaptOcjQ5bWL/av42Axi5O1V20z7aMA75sAiSXn3yXJYjnmaO3PLsI
+Pj9+89M9IaijfVufQSs0t6wWWAtrozwXoqA3+xDJRloGfkuI8dhAs5KHLMS
eNKm1M9ulABG/r4/6ei+UzFpNpMEOL3UaBC4f6+u310hEkI219QI7DUkJ6Im
SkKviTUh8Lf4yTtpYiQszcxVEoxnu7R7rZI4CYbh5EmBGVX1jTfnkvDy3diI
wMZ7y/3l55EgkTh0UzC/AjpD9F9pEqY+Mt0E61kSfzF9viwJcnEnQLDe1CVB
JkkLSAioEbMWxEOqyuWThAIJ1XEhgTnoaKdNR+IVcX4tVZWC+I3xV4jNViHh
eAVvmSDegXGymdGqJPjo95c8QPM0JtaJaJBwzLreOw/dtKcuYEoT1xOsp12I
tuaX/nVam4SPN/8zL0JXXUzP+qNDwtcIkePF6AfPApt/6pOgxdi5rVzw/9jj
HBhsSAJ7lWVPJfoaBeK0EQkZlxfce44+py5j1r+eBN5Wx7jX6F9Px74eMiOh
trqqgIk+vJt7tNuChDPef/18h3aKfZJDWpJQ52DU3YDWG3SSaLEnIeHZpCcb
XbnH7lWCAwnbr6wY4qItX2w+ZrGbBKNxw/960W5J+h33XEhoGu5I/oGON5iT
H+pDAj8y3lzw/i64NeOhfRDXM5EuOQ+dJTwiy/IjoehHsqicYH/6zD1lGUgC
+UnSXw3dE1q1XTachDsrA2U3oEM6S6ZrTpMQaRmivgk9tSWvJPwcCcSPPXu3
CsZXSFHiXCBBsqJ8vTPa8unR/qIkEnQDhtiC/SxrakmCfS4Jqak+OS/QegcV
LYQfkKCQcUD/HbqiQXq4NI8EX+VtXU3ohsxJV5UiEkx2l1XzBPfb9G3FwFM0
Q9tLCvdbt9j4D3GNJJRnP5L3R/fwI86afSah4A9X7Tg62PnE6qFmEujIScco
dJy2zy3ndhKGjciVt9HltWb+Wt0kLHoSzKwX5APpIXHmOAkliyYDzDCffH6R
cHHbFMbHr3ViG/pagOZfjTMktPadKHRGy9a6ibbP4sDayImwYwLH1EzRUhxY
5q5TXICeP3F7WHkpBxzP77uvifmrKW9t8F1NDlj8OLV/LfqKSxOtpc2Bb7+9
YAtaulyMWr2SAzpDUT4H0FLBQb02JhwoU1W3f4CW7N3COmbLAS8DufurMX/W
3SDdxuw5cG+EkWiJvmx1uu2cAweSPDakOqElsh9/i3figMw/V+VPoee6K3/K
9OTA3cXtxUy0+Jehmo/HOFBVtizYC/P5rFd3ipamcYA2WjevBOuDdjOrrUQG
B1SKDFfVooueDZK373Jg7gulMC7ardxcVvYBnq8si5VbTEFxIREqVMKBbhet
5JNoj7SlGzrfceBcbqC9DdYvleH5zJSfHBi+VHhBTJ2CpNHd7rtGOFDNCn2z
BO1zfPL3vDEOeN8009uoLli//fKYaQ5YcRrDTqMP+NHxx+ZwIU1l0fRPtKzz
mp0OalxY2cx8Ooj11xGj521zbLlwWj5gfBLrNUbT14JKey4kFsU9U11Ggfw/
QxGHHLgwnQLZG9Gv7mlq1Thx4bl+RF80Wk7hSkikFxfO8VwdpLFefD7mKzF6
nAuKfy1N0sV6UuKVlDkviwvX3TzeRWF9mr/NO+vlCBeYF5U97mE9bKSnYQFj
XEixiFVsQL+UIjteTXDBkHVtdERQL39xV3gt1AVE83XlbatwP3B3TXoztwuu
qDuK0miLEIcz71W74M5Rl12bDPD62xYun627IOjzql+Cev73gNL8npQuGLSN
O96N/cD19N53abe6oNy7ep4y9gtrdpZG7E7rgrh9Iw0O6OASe5pxtwvmPHSo
q0JTYZENdwq64ChFl6RsoKBbrOeyY3UXPCzsNthlRsFXteI5L6guMKuw/NML
mK9224het+JBU2nMZBL2RxFbYzJLe3iQ7aAi+a8zBRqd21tzYrohhGMuesof
849J9HVFwx44csIw2TeCgr9VG8eEv/SA3Jr3rkYpOP/aRG5QVC/89EzedKkY
9/dZHqG7lvXBTt8X40n1GH92WbYIsw8yOyWKfAYoEDsbtWd98HfYx1ikEyTF
B6E8jyKubD/c637sV7maDyG3ixJlq/vhvR6zotGNDy9048RlAgdAcsk0Qwn7
T5ntIXrnpQZBTn5wvn4xH1grm76EVw3CuJnpzx4uHx5nwDKeBz43ZtAG4wU0
uBcZyyyepmCpa4Wdkw0NkTF3o1gP+dA3mlMzHUVDYd/iO1LYF+eeT1/y+TkN
cekxXuwdNBhIFJt3VNHgu4vSfORIw/yZ3zd4L2hQqap6bO9Mg5KW0fToKxoS
kve9vexNw+SP/Y80mDT4Gd/6MTechvHVV65H1tGwJHrB1tn3aQj7oF0c0EnD
9Loz81r+w3mlKJ0/y6ahjer6fD8f+/D6zVeTCBquOD9xty6mwabR+XAx9vcz
OruOxeA85kidEx/vpoH1KTlD9AsNZwbkJlP4NFTGjvp8+UrDiJhbaT5Nw3VT
zxU5rTRwVd3zGUM02N5bVboZ73NiV5XTwDANz8LqP0R9p2F/Qn2a5SgNKSvX
JjsO0lC+o9/W7Q8Nwdy0PRo4juMh8Q3BYzRo2wUQjF80tP8+/CVzgoZZws25
V/B3KjmMcxWTNJBlpoe9xmmwl9vg3zhFQ9XhHH0DPBp8J671TtNwU03it+A7
iNf/v4f8D8QArrM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"T[x]\"", TraditionalForm]},
  AxesOrigin->{0, 0.92},
  PlotRange->{{0, 1}, {0.9088887083726844, 0.9999999920458542}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.55941301673118*^9, 3.5594130476295843`*^9, 
  3.559413086763739*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.6.2(d)", "Subsubtitle",
 CellChangeTimes->{{3.559413157453772*^9, 3.559413159487365*^9}}],

Cell[TextData[{
 StyleBox["(2)",
  FontWeight->"Bold"],
 " Find, by hand, a complete set of independent solutions to the following \
linear homogeneous ODEs. (You may check your results using ",
 StyleBox["Mathematica, ",
  FontSlant->"Italic"],
 "of course.):"
}], "Text"],

Cell[TextData[{
 StyleBox["(d)",
  FontWeight->"Bold"],
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[DoublePrime]"], "=", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}]}], "-", 
      SuperscriptBox["x", "\[Prime]"]}]}], ",", "  ", 
    RowBox[{
     SuperscriptBox["y", "\[DoublePrime]"], "=", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}]}], "-", 
      SuperscriptBox["y", "\[Prime]"]}]}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.559559861681992*^9, 3.559559865314713*^9}}],

Cell[TextData[{
 "Assume a solution of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", " ", 
    RowBox[{
     SubscriptBox["x", "0"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{" ", 
       RowBox[{"s", " ", "t"}]}]]}]}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["y", "0"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"s", " ", "t"}]]}]}], TraditionalForm]]],
 ". Substitution into the ODEs yields the coupled equations\n\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["s", "2"], 
     SubscriptBox["x", "0"]}], "=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["y", "0"], "-", 
        SubscriptBox["x", "0"]}], ")"}]}], "-", 
     RowBox[{"s", " ", 
      SubscriptBox["x", "0"]}]}]}], TraditionalForm]]],
 "\n\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["s", "2"], 
     SubscriptBox["y", "0"]}], "=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "0"], "-", 
        SubscriptBox["y", "0"]}], ")"}]}], "-", 
     RowBox[{"s", " ", 
      SubscriptBox["y", "0"]}]}]}], TraditionalForm]]],
 ". \n This can be written as a matrix equation, ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"A", "\[CenterDot]", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"]}], "}"}]}], "=", 
     RowBox[{"0", " ", "."}]}]}], TraditionalForm]]],
 "  A nontrivial solution only exists for special values of ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]]],
 ", given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Det", " ", "A"}], " ", "=", " ", "0"}], TraditionalForm]]],
 ". "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "^", "2"}], " ", "+", " ", "s", " ", "+", " ", "2"}], 
       ",", " ", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{
        RowBox[{"s", "^", "2"}], " ", "+", " ", "s", "+", " ", "2"}]}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"2", "+", "s", "+", 
       SuperscriptBox["s", "2"]}], 
      RowBox[{"-", "2"}]},
     {
      RowBox[{"-", "2"}], 
      RowBox[{"2", "+", "s", "+", 
       SuperscriptBox["s", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The Determinant of the matrix is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["s", "2"], "+", " ", "s", " ", "+", " ", "2"}], ")"}], 
      "2"], "-", "4"}], "=", 
    RowBox[{
     SuperscriptBox["s", "4"], "+", 
     RowBox[{"2", 
      SuperscriptBox["s", "3"]}], "+", 
     RowBox[{"4", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"4", "s"}]}]}], TraditionalForm]]],
 ". I could solve this by hand pretty easily but I'll do it in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to save time:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Det", "[", "A", "]"}], "\[Equal]", "0"}], ",", "s"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["15"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["15"]}]}], ")"}]}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "There are four solutions; two oscillate and decay, one just decays, and the \
fourth with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "=", "0"}], TraditionalForm]]],
 " is a time-independent translation of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 ". For each solution, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]]],
 " are related by the equations:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["y", "0"], " ", "=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "+", "s", "+", 
       SuperscriptBox["s", "2"]}], "2"], 
     SubscriptBox["x", "0"]}]}], TraditionalForm]]],
 ", so the ratio of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 " is given by\n"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", "+", " ", "s", " ", "+", " ", 
      RowBox[{"s", "^", "2"}]}], ")"}], "/", "2"}], " ", "/.", "%"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Therefore,  4 independent solutions are:\n1) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", 
     RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"y", "(", "t", ")"}], " ", "=", 
     RowBox[{"exp", "(", 
      RowBox[{"-", "t"}], ")"}], " "}]}], TraditionalForm]]],
 "\n2) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", "t", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"y", "(", "t", ")"}], " ", "=", " ", "1"}]}], 
   TraditionalForm]]],
 "\n3) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", "t", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"y", "(", "t", ")"}]}], " ", "=", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], " ", "-", " ", 
         RowBox[{
          SqrtBox["15"], "\[ImaginaryI]"}]}], ")"}], 
       RowBox[{"t", "/", "2"}]}]]}]}], TraditionalForm]]],
 "\n4) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", "t", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"y", "(", "t", ")"}]}], " ", "=", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], " ", "+", 
         RowBox[{
          SqrtBox["15"], "\[ImaginaryI]"}]}], ")"}], 
       RowBox[{"t", "/", "2"}]}]]}]}], TraditionalForm]]],
 "\nand the general solution is a general linear combination of these 4 \
solutions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"x", "(", "t", ")"}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["C", "1"], 
       RowBox[{"exp", "(", 
        RowBox[{"-", "t"}], ")"}]}], " ", "+", " ", 
      SubscriptBox["C", "2"], "+", 
      RowBox[{
       SubscriptBox["C", "3"], 
       RowBox[{"exp", "(", 
        RowBox[{
         RowBox[{"-", "1"}], " ", "-", 
         RowBox[{
          SqrtBox["15"], "\[ImaginaryI]"}]}], ")"}], "t"}], "+", 
      RowBox[{
       SubscriptBox["C", "4"], 
       RowBox[{"exp", "(", 
        RowBox[{
         RowBox[{"-", "1"}], " ", "+", 
         RowBox[{
          SqrtBox["15"], "\[ImaginaryI]"}]}], ")"}], "t"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y", "(", "t", ")"}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["C", "1"], 
       RowBox[{"exp", "(", 
        RowBox[{"-", "t"}], ")"}]}], " ", "+", " ", 
      SubscriptBox["C", "2"], "-", 
      RowBox[{
       SubscriptBox["C", "3"], 
       RowBox[{"exp", "(", 
        RowBox[{
         RowBox[{"-", "1"}], " ", "-", 
         RowBox[{
          SqrtBox["15"], "\[ImaginaryI]"}]}], ")"}], "t"}], "-", 
      RowBox[{
       SubscriptBox["C", "4"], 
       RowBox[{"exp", "(", 
        RowBox[{
         RowBox[{"-", "1"}], " ", "+", 
         RowBox[{
          SqrtBox["15"], "\[ImaginaryI]"}]}], ")"}], 
       RowBox[{"t", "."}]}]}]}]}], TraditionalForm]]],
 "\nOne could, if one wished, write the last two solutions in terms of sines \
and cosines."
}], "Text",
 CellChangeTimes->{{3.5595606036023083`*^9, 3.559560739610587*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.6.4", "Subsubtitle",
 CellChangeTimes->{{3.559413258681209*^9, 3.5594132595234737`*^9}}],

Cell[TextData[{
 StyleBox["(4)",
  FontWeight->"Bold"],
 " A finite-difference method for second-order ODEs was discussed in ",
 ButtonBox["Sec. 1.4",
  BaseStyle->"Hyperlink",
  ButtonData:>"Sec. 1.4"],
 "; see Eqs. ",
 ButtonBox["(1.4.27)",
  BaseStyle->"Hyperlink",
  ButtonData:>"(1.4.27)"],
 " and ",
 ButtonBox["(1.4.28)",
  BaseStyle->"Hyperlink",
  ButtonData:>"(1.4.28)"],
 ". Using this method, finite-difference ",
 StyleBox[ButtonBox["Airy",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www-groups.dcs.st-and.ac.uk/~history/Mathematicians/Airy.\
html"], None}],
  FontSlant->"Italic"],
 StyleBox["'s equation",
  FontSlant->"Italic"]
}], "Text",
 CellTags->"i:106"],

Cell[TextData[{
 "\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[DifferentialD]", "2"], "x"}], 
      RowBox[{"\[DifferentialD]", 
       SuperscriptBox["t", "2"]}],
      MultilineFunction->None],
     FontSize->15], "=", 
    RowBox[{
     RowBox[{"-", "t"}], " ", 
     RowBox[{"x", "(", "t", ")"}]}]}], TraditionalForm]]],
 ","
}], "Text"],

Cell[TextData[{
 StyleBox[" ",
  FontSlant->"Italic"],
 "with initial conditions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"x", "(", 
      RowBox[{"-", "1"}], ")"}], "=", "1"}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "\[Prime]"], "(", 
      RowBox[{"-", "1"}], ")"}], "=", "0"}]}], TraditionalForm]]],
 ". Write the ODE and initial conditions as a matrix equation of the form ",
 ButtonBox["(1.6.24)",
  BaseStyle->"Hyperlink",
  ButtonData:>"(1.6.24)"],
 ". Solve the ODE by matrix inversion, taking ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["t",
        FontSlant->"Italic"]}]], " ", "=", " ", "0.1"}], ","}], 
   TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "1"}], "<", "t", "<", "5"}], TraditionalForm]]],
 ", and plot the result along with the analytic result found from ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "using ",
 StyleBox["DSolve",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["Solution", "Subsection"],

Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "The method used  on an equation of this form is \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"n", "+", "1", " "}]], "-", 
      RowBox[{"2", " ", 
       SubscriptBox["x", "n"]}], " ", "+", " ", 
      SubscriptBox["x", 
       RowBox[{"n", "-", "1"}]]}], "=", " ", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["t", "n"]}], 
      SubscriptBox["x", "n"], " ", 
      SuperscriptBox[
       StyleBox[
        RowBox[{"\[CapitalDelta]", 
         StyleBox["t",
          FontSlant->"Italic"]}]], "2"]}]}], ",", " ", 
    RowBox[{"n", "=", "1"}], ",", "2", ",", 
    RowBox[{"3.", ".."}]}], TraditionalForm]]],
 ", with initial conditions given by",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "1"}]}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"and", " ", 
     SubscriptBox["x", "1"]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], " ", "-", " ", 
      RowBox[{"0", " ", "\[CapitalDelta]t"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", 
       SuperscriptBox["\[CapitalDelta]t", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"+", "1"}], " ", 
         SubscriptBox["x", "0"]}], ")"}]}]}], " ", "=", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", 
       RowBox[{
        SuperscriptBox["\[CapitalDelta]t", "2"], " ", "."}]}]}]}]}], 
   TraditionalForm]]],
 "  (This according to Eq. (1.4.28) taking ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", " ", "=", 
    RowBox[{
     RowBox[{"-", "t"}], " ", "x"}]}], TraditionalForm]]],
 ".)\nWe will write this as a matrix equation, ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      StyleBox[
       SubscriptBox["L", 
        RowBox[{"n", " ", "m", " "}]],
       FontWeight->"Bold"], 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "m"]}], "=", " ", 
     SubscriptBox[
      StyleBox["f",
       FontWeight->"Bold",
       FontSlant->"Plain"], "n"]}],
    FontSlant->"Plain"], TraditionalForm]]],
 ". The equations are:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "0"], "=", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["x", "1"], "=", 
     RowBox[{"1", " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", 
       SuperscriptBox["\[CapitalDelta]t", "2"]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"2", " "}]], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["x", "1"], "(", 
        RowBox[{"1", " ", "-", " ", 
         RowBox[{
          SubscriptBox["t", "1"], 
          SuperscriptBox["\[CapitalDelta]t", "2"]}]}], ")"}]}], " ", "+", " ", 
      SubscriptBox["x", "0"]}], "=", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"3", " "}]], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["x", "2"], "(", 
        RowBox[{"1", " ", "-", " ", 
         RowBox[{
          SubscriptBox["t", "2"], 
          SuperscriptBox["\[CapitalDelta]t", "2"]}]}], ")"}]}], " ", "+", " ", 
      SubscriptBox["x", "1"]}], "=", "0"}], ",", "\[IndentingNewLine]", "...",
     "\[IndentingNewLine]"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{3.559560795741252*^9}],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]t", " ", "=", " ", "0.1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "[", "n_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "1"}], " ", "+", " ", 
    RowBox[{"n", " ", "\[CapitalDelta]t"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"5", " ", "+", " ", "1"}], ")"}], "/", "\[CapitalDelta]t"}]}], 
  ";"}]}], "Input"],

Cell["We first create the matrix using Kronecker Delta functions. ", "Text",
 CellChangeTimes->{{3.559561324478195*^9, 3.55956133959764*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"m", ",", 
        RowBox[{"n", "+", "1"}]}], "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"m", ",", "n"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"t", "[", "n", "]"}], " ", 
          SuperscriptBox["\[CapitalDelta]t", "2"]}]}], ")"}]}], " ", "+", 
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"m", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "M"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", 
       RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.559561367726811*^9, 3.559561368244728*^9}, 
   3.5595614411223583`*^9}],

Cell[TextData[{
 "The first two row must be modified to provide the correct equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.5595610471532593`*^9, 3.559561058461102*^9}, {
  3.559561397762103*^9, 3.559561409538759*^9}, {3.559561446857891*^9, 
  3.559561453763276*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"L", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.01`"}], ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.5594132701546183`*^9, 3.559561112193858*^9, 
  3.55956137862663*^9, 3.559561458998543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"L", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.559561420748375*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"-", "2.009`"}], ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.55956142153274*^9, 3.5595614659392557`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", "0"}], ";"}]], "Input"],

Cell[TextData[{
 "This row  provides the equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 ". But we need to add on another equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 ". To make this equation, we prepend to L another row."
}], "Text",
 CellChangeTimes->{
  3.559560947253327*^9, {3.559561478604272*^9, 3.5595614802460012`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"newrow", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", 
       RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newrow", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"L", ",", "newrow"}], "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "L", "]"}]], "Input",
 CellChangeTimes->{{3.559561126360794*^9, 3.559561129808483*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"1.`", 
      RowBox[{"-", "2.009`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", 
      RowBox[{"-", "2.008`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "1.`", 
      RowBox[{"-", "2.007`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "2.006`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "2.005`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "2.004`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "2.003`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "2.002`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "2.001`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "2.`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", 
      RowBox[{"-", "1.9989999999999999`"}], "1.`", "0.`", "0.`", "0.`", "0.`",
       "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", 
      RowBox[{"-", "1.998`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.997`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.996`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.995`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.994`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.993`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.992`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.991`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.99`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
       "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", 
      RowBox[{"-", "1.989`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", 
      RowBox[{"-", "1.988`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.987`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.986`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.985`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.984`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.983`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.982`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.981`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.98`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
       "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", 
      RowBox[{"-", "1.979`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", 
      RowBox[{"-", "1.978`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.977`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.976`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.975`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.974`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.973`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.972`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.971`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.97`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
       "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", 
      RowBox[{"-", "1.969`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", 
      RowBox[{"-", "1.968`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.967`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.966`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.965`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.964`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.963`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.962`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.961`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.96`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
       "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", 
      RowBox[{"-", "1.959`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", 
      RowBox[{"-", "1.958`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.957`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.956`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.955`"}], "1.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.954`"}], "1.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.953`"}], "1.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.952`"}], "1.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.951`"}], "1.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      RowBox[{"-", "1.95`"}], "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.559561130582117*^9, 3.559561521156516*^9}]
}, Open  ]],

Cell[TextData[{
 "This matrix is applied o the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x",
     FontWeight->"Bold"], "=", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["x", "1"], ",", 
      SubscriptBox["x", "2"], ",", "..."}], "}"}]}], TraditionalForm]]],
 " in order to produce the correct linear equations, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["L",
      FontWeight->"Bold"], " ", "\[CenterDot]", 
     StyleBox["x",
      FontWeight->"Bold"]}], "=", " ", 
    RowBox[{
     StyleBox["f",
      FontWeight->"Bold"], "."}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.5595611682830477`*^9, 3.559561232531158*^9}, {
  3.5595615306455183`*^9, 3.55956155248857*^9}}],

Cell[TextData[{
 "The source term ",
 Cell[BoxData[
  FormBox[
   StyleBox["f",
    FontWeight->"Bold"], TraditionalForm]]],
 " involves the initial conditions:"
}], "Text",
 CellChangeTimes->{{3.559561566624531*^9, 3.559561578369968*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", 
       RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "  ", 
     SuperscriptBox["\[CapitalDelta]t", "2"]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{3.5595609817352123`*^9}],

Cell["Now solve the problem by matrix inversion:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xsol", " ", "=", " ", 
  RowBox[{
   RowBox[{"Inverse", "[", "L", "]"}], ".", "f"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.005`", ",", "1.0190449999999995`", ",", 
   "1.0412423599999987`", ",", "1.0707284165199993`", ",", 
   "1.106638843539118`", ",", "1.1480824647759356`", ",", 
   "1.194118415871853`", ",", "1.2437367222153881`", ",", 
   "1.295842502003353`", ",", "1.3492441242933246`", ",", 
   "1.402645746583289`", ",", "1.4546447231266768`", ",", 
   "1.5037344102238084`", ",", "1.548312894090266`", ",", 
   "1.586698126380366`", ",", "1.6171498680385596`", ",", 
   "1.6378987104885319`", ",", "1.6471822619650816`", ",", 
   "1.6432883553459021`", ",", "1.62460485352862`", ",", 
   "1.5896753031760404`", ",", "1.5372593244885344`", ",", 
   "1.4663962339071546`", ",", "1.3764699922849957`", ",", 
   "1.2672731707708458`", ",", "1.1390672516951241`", ",", 
   "0.9926362565922844`", ",", "0.8293304451273791`", ",", 
   "0.6510966856501774`", ",", "0.46049208914562456`", ",", 
   "0.26067765085815786`", ",", "0.055388981902663836`", ",", 
   RowBox[{"-", "0.15111824465467638`"}], ",", 
   RowBox[{"-", "0.3541497515849662`"}], ",", 
   RowBox[{"-", "0.5486816644772172`"}], ",", 
   RowBox[{"-", "0.7294965357575354`"}], ",", 
   RowBox[{"-", "0.8913444971081583`"}], ",", 
   RowBox[{"-", "1.0291261570368597`"}], ",", 
   RowBox[{"-", "1.1380922845685326`"}], ",", 
   RowBox[{"-", "1.2140537358477168`"}], ",", 
   RowBox[{"-", "1.2535935750514682`"}], ",", 
   RowBox[{"-", "1.2542720134286256`"}], ",", 
   RowBox[{"-", "1.2148137473760663`"}], ",", 
   RowBox[{"-", "1.135266627660096`"}], ",", 
   RowBox[{"-", "1.0171204426036837`"}], ",", 
   RowBox[{"-", "0.8633750420561412`"}], ",", 
   RowBox[{"-", "0.6785481399945805`"}], ",", 
   RowBox[{"-", "0.4686149567532194`"}], ",", 
   RowBox[{"-", "0.24087440515523362`"}], ",", 
   RowBox[{"-", "0.003739751756195453`"}], ",", "0.23354449171309288`", ",", 
   "0.46125341102213824`", ",", "0.6695896870682612`", ",", 
   "0.8491336065704447`", ",", "0.9913156473835301`", ",", 
   "1.0888884840643556`", ",", "1.1363724504782233`", ",", 
   "1.130446911719611`", ",", "1.070259921198458`", ",", 
   "0.9576301945385826`", ",", "0.7971189581517759`"}], "}"}]], "Output",
 CellChangeTimes->{3.559413270434642*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soldat", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "n", "]"}], ",", 
      RowBox[{"xsol", "[", 
       RowBox[{"[", 
        RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", 
      RowBox[{"M", "-", "1"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9`"}], ",", "1.005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8`"}], ",", "1.0190449999999995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7`"}], ",", "1.0412423599999987`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6`"}], ",", "1.0707284165199993`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", "1.106638843539118`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3999999999999999`"}], ",", "1.1480824647759356`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.29999999999999993`"}], ",", "1.194118415871853`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19999999999999996`"}], ",", "1.2437367222153881`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09999999999999998`"}], ",", "1.295842502003353`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.3492441242933246`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10000000000000009`", ",", "1.402645746583289`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20000000000000018`", ",", "1.4546447231266768`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.30000000000000004`", ",", "1.5037344102238084`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.40000000000000013`", ",", "1.548312894090266`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "1.586698126380366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", "1.6171498680385596`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000002`", ",", "1.6378987104885319`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "1.6471822619650816`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9000000000000001`", ",", "1.6432883553459021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.62460485352862`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "1.5896753031760404`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2000000000000002`", ",", "1.5372593244885344`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3000000000000003`", ",", "1.4663962339071546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4000000000000004`", ",", "1.3764699922849957`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "1.2672731707708458`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6`", ",", "1.1390672516951241`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7000000000000002`", ",", "0.9926362565922844`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8000000000000003`", ",", "0.8293304451273791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9000000000000004`", ",", "0.6510966856501774`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.46049208914562456`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1`", ",", "0.26067765085815786`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2`", ",", "0.055388981902663836`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3000000000000003`", ",", 
     RowBox[{"-", "0.15111824465467638`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4000000000000004`", ",", 
     RowBox[{"-", "0.3541497515849662`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", 
     RowBox[{"-", "0.5486816644772172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", 
     RowBox[{"-", "0.7294965357575354`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7`", ",", 
     RowBox[{"-", "0.8913444971081583`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8000000000000003`", ",", 
     RowBox[{"-", "1.0291261570368597`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9000000000000004`", ",", 
     RowBox[{"-", "1.1380922845685326`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "1.2140537358477168`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.1000000000000005`", ",", 
     RowBox[{"-", "1.2535935750514682`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.2`", ",", 
     RowBox[{"-", "1.2542720134286256`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3`", ",", 
     RowBox[{"-", "1.2148137473760663`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", 
     RowBox[{"-", "1.135266627660096`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", 
     RowBox[{"-", "1.0171204426036837`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.6000000000000005`", ",", 
     RowBox[{"-", "0.8633750420561412`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.7`", ",", 
     RowBox[{"-", "0.6785481399945805`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8000000000000007`", ",", 
     RowBox[{"-", "0.4686149567532194`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.9000000000000004`", ",", 
     RowBox[{"-", "0.24087440515523362`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", 
     RowBox[{"-", "0.003739751756195453`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.1000000000000005`", ",", "0.23354449171309288`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"4.2`", ",", "0.46125341102213824`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.300000000000001`", ",", "0.6695896870682612`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "0.8491336065704447`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "0.9913156473835301`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6000000000000005`", ",", "1.0888884840643556`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "1.1363724504782233`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.800000000000001`", ",", "1.130446911719611`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "1.070259921198458`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.559413270484879*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl", "=", 
  RowBox[{"ListPlot", "[", "soldat", "]"}]}]], "Input",
 CellChangeTimes->{{3.559413284377934*^9, 3.55941328509665*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1kntI01EUx6epqU3d1PwjTWd/RFSKmQU665yCVKx0RKRliCbZipVEVGKB
6w/JFCys1HyxgsAkZZT4wOzqfODEV6jpkOFE5yNfvz2cm6mU+93fFy6Xyz3n
c+75nht8K+vKbUcejxf9f+3urBhCdxjo39Uy8a2Pnc7xZaD8w64WiT7rfLBj
AgOZds0RVVEjWalh4KRdM6Snui2wIdgALEdH8ttKV/saDFBmz9cQJmS9qTDV
COH2+BFizn+26O9vovdqgtvHcpLnuHMLkTMryd2tZuBeKHmtcnhRsg4K9h54
oaW10Q8t9KwGOb+4MDJmAyJYPkhzA4Yvelmhkq0PoucdbTPdVu59oNT4vT2Y
YaPxMyC6DAUTUzaQsv2BJEkcOxaxyfUPSq8K9eSNTRhk/QF5q0PrQvwmcL4p
sa4mfcdG4w0gyZxLTczi+CZ4k6ESV5VZab4ZFG0t+pQnG7SeBeQf+ZnOLhbK
s4LSkC1ujzFTng2wPOh9daSR8v4CSm8G1HWuUd4WpPXIeLpXfyhvB0QaWVPv
2CznH8qrfwx9z9bS+fJQZE2QGOqHKd8B5QlfRgwpX+GOPd8RRY8Tm8aTOglb
bw/+vBvdnFH7m/4TJ/RzqdD0F00TlueEgo1HgW7J84TlOWNcsVA/m7dMWJ4L
SubPbl96ylDeXhSMpp1TnDJSnitKxsMqO2UmwvbjirzD64eaPc2U54YK2dTL
XKGZsP/PHZl0cYEuy0R5+/DIZ901j6Mcj4/tp3/tF8UwlMdHdI/61qVYojwP
DIvqKKlt1BPWL09M27xXot7WUp4X4ny8xTo6SHkC5E1UrY18ekD7EaC0z/WE
enaA+inA9kKdS0iels5HiHEJluux9/XUXyFKjV1nDhxfovPwRvmQsnSyeY36
7Y2oar/qJzNQnjcOC1d170K5efvgQrhYnuhnpDwfjLuwpe0NMsA/CKTB1g==

    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.559413270545205*^9, 3.559413286406682*^9}}]
}, Open  ]],

Cell[TextData[{
 "Compare to the exact solution obtained via ",
 StyleBox["DSolve",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", in terms of Airy functions:"
}], "Text",
 CellChangeTimes->{{3.5595616080582943`*^9, 3.559561642618691*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"-", " ", "t"}], " ", 
       RowBox[{"x", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"-", "1"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", 
       RowBox[{"-", "1"}], "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"AiryAiPrime", "[", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], "]"}], " ", 
        RowBox[{"AiryBi", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "3"}]], " ", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"AiryAi", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "3"}]], " ", "t"}], "]"}], " ", 
        RowBox[{"AiryBiPrime", "[", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"AiryAiPrime", "[", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], "]"}], " ", 
        RowBox[{"AiryBi", "[", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"AiryAi", "[", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], "]"}], " ", 
        RowBox[{"AiryBiPrime", "[", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.559413270671996*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xsolexact", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "/.", 
    RowBox[{"%", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"xsolexact", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
sTg=
     "]], LineBox[CompressedData["
1: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
XxiXfYFbnlWDo6MUo9bGGcRd+wL/A4zCnVk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 5}, {-1.2541462797802532`, 1.6439312081589625`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.559413271730227*^9, 3.5594132924592953`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%", ",", "pl"}], "]"}]], "Input",
 CellChangeTimes->{{3.559413294266758*^9, 3.559413294365672*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
sTg=
      "]], LineBox[CompressedData["
1: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
XxiXfYFbnlWDo6MUo9bGGcRd+wL/A4zCnVk=
      "]]}}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1kntI01EUx6epqU3d1PwjTWd/RFSKmQU665yCVKx0RKRliCbZipVEVGKB
6w/JFCys1HyxgsAkZZT4wOzqfODEV6jpkOFE5yNfvz2cm6mU+93fFy6Xyz3n
c+75nht8K+vKbUcejxf9f+3urBhCdxjo39Uy8a2Pnc7xZaD8w64WiT7rfLBj
AgOZds0RVVEjWalh4KRdM6Snui2wIdgALEdH8ttKV/saDFBmz9cQJmS9qTDV
COH2+BFizn+26O9vovdqgtvHcpLnuHMLkTMryd2tZuBeKHmtcnhRsg4K9h54
oaW10Q8t9KwGOb+4MDJmAyJYPkhzA4Yvelmhkq0PoucdbTPdVu59oNT4vT2Y
YaPxMyC6DAUTUzaQsv2BJEkcOxaxyfUPSq8K9eSNTRhk/QF5q0PrQvwmcL4p
sa4mfcdG4w0gyZxLTczi+CZ4k6ESV5VZab4ZFG0t+pQnG7SeBeQf+ZnOLhbK
s4LSkC1ujzFTng2wPOh9daSR8v4CSm8G1HWuUd4WpPXIeLpXfyhvB0QaWVPv
2CznH8qrfwx9z9bS+fJQZE2QGOqHKd8B5QlfRgwpX+GOPd8RRY8Tm8aTOglb
bw/+vBvdnFH7m/4TJ/RzqdD0F00TlueEgo1HgW7J84TlOWNcsVA/m7dMWJ4L
SubPbl96ylDeXhSMpp1TnDJSnitKxsMqO2UmwvbjirzD64eaPc2U54YK2dTL
XKGZsP/PHZl0cYEuy0R5+/DIZ901j6Mcj4/tp3/tF8UwlMdHdI/61qVYojwP
DIvqKKlt1BPWL09M27xXot7WUp4X4ny8xTo6SHkC5E1UrY18ekD7EaC0z/WE
enaA+inA9kKdS0iels5HiHEJluux9/XUXyFKjV1nDhxfovPwRvmQsnSyeY36
7Y2oar/qJzNQnjcOC1d170K5efvgQrhYnuhnpDwfjLuwpe0NMsA/CKTB1g==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 5}, {-1.2541462797802532`, 1.6439312081589625`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.559413272031191*^9, 3.5594132947682753`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 6", "Subsubtitle",
 CellChangeTimes->{{3.559413309622281*^9, 3.5594133213421793`*^9}}],

Cell[TextData[{
 "Find a particular solution by hand to the following linear ODE:\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[DoublePrime]"], "+", 
     RowBox[{"2", "t", " ", 
      SuperscriptBox["x", "\[Prime]"]}], "+", "x"}], "=", 
    RowBox[{"4", " ", 
     SuperscriptBox["t", "2"]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.559134111849947*^9, 3.5591341512917356`*^9}, {
  3.559134192114485*^9, 3.559134307174644*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5594135354103947`*^9, 3.559413538738039*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.559413362321136*^9, 3.5594133659761066`*^9}}],

Cell["\<\
Try as a guess the foloowing form for the particular solution:\
\>", "Text",
 CellChangeTimes->{{3.559413346691017*^9, 3.5594133929935637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xp", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{"a", " ", "+", " ", 
    RowBox[{"b", " ", "t"}], " ", "+", " ", 
    RowBox[{"c", " ", 
     RowBox[{"t", "^", "2"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5594133691301403`*^9, 3.559413376964429*^9}}],

Cell[TextData[{
 "Substitute into the ODE and choose values for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", " ", "b", " ", "and", " ", "c"}], TraditionalForm]]],
 " to solve the problem"
}], "Text",
 CellChangeTimes->{{3.55941337984482*^9, 3.559413419667757*^9}, {
  3.559561682095751*^9, 3.559561694750149*^9}, {3.560282565429764*^9, 
  3.5602825811307087`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xp", "''"}], "[", "t", "]"}], " ", "+", " ", 
    RowBox[{"2", " ", "t", " ", 
     RowBox[{
      RowBox[{"xp", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"xp", "[", "t", "]"}], " ", "-", " ", 
    RowBox[{"4", " ", 
     RowBox[{"t", "^", "2"}]}]}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.5594134220175333`*^9, 3.559413442778427*^9}}],

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"2", " ", "c"}], "+", 
  RowBox[{"3", " ", "b", " ", "t"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"5", " ", "c"}]}], ")"}], " ", 
   SuperscriptBox["t", "2"]}]}]], "Output",
 CellChangeTimes->{3.559413443212213*^9}]
}, Open  ]],

Cell[TextData[{
 "By inspection, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"4", "/", "5"}]}], ",", " ", 
    RowBox[{"b", "=", 
     RowBox[{
      RowBox[{"0", " ", "and", " ", "a"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "c"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"-", "8"}], "/", "5"}]}]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.5594134537997932`*^9, 3.5594134776609*^9}, 
   3.559561702978031*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xp", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"xp", "[", "t", "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "8"}], "/", "5"}]}], ",", " ", 
     RowBox[{"b", "\[Rule]", "0"}], ",", " ", 
     RowBox[{"c", "\[Rule]", 
      RowBox[{"4", "/", "5"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.559413479107851*^9, 3.559413498758464*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["8", "5"]}], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["t", "2"]}], "5"]}]], "Output",
 CellChangeTimes->{3.559413500188799*^9}]
}, Open  ]],

Cell["Test:", "Text",
 CellChangeTimes->{{3.559413530626403*^9, 3.559413531897365*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xp", "''"}], "[", "t", "]"}], "+", 
    RowBox[{"2", "t", " ", 
     RowBox[{
      RowBox[{"xp", "'"}], "[", "t", "]"}]}], "+", 
    RowBox[{"xp", "[", "t", "]"}]}], "\[Equal]", 
   RowBox[{"4", 
    RowBox[{"t", "^", "2"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.559413507077778*^9, 3.559413526758847*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.559413527357255*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{740, 608},
WindowMargins->{{74, Automatic}, {-51, Automatic}},
ShowSelection->True,
FrontEndVersion->"9.0 for Microsoft Windows (32-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "i:65"->{
  Cell[913, 33, 1248, 42, 101, "Text",
   CellTags->"i:65"]},
 "i:106"->{
  Cell[130248, 2924, 690, 25, 49, "Text",
   CellTags->"i:106"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"i:65", 220986, 4866},
 {"i:106", 221060, 4869}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 110, 1, 49, "Subtitle"],
Cell[692, 25, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[809, 30, 101, 1, 28, "Subsubtitle"],
Cell[913, 33, 1248, 42, 101, "Text",
 CellTags->"i:65"],
Cell[2164, 77, 453, 16, 30, "Text"],
Cell[2620, 95, 962, 37, 71, "Text"],
Cell[3585, 134, 921, 34, 69, "Text"],
Cell[4509, 170, 1291, 47, 99, "Text"],
Cell[5803, 219, 1111, 40, 61, "Text"],
Cell[6917, 261, 122, 5, 30, "Text"],
Cell[7042, 268, 188, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[7255, 278, 30, 0, 43, "Subsection"],
Cell[7288, 280, 68, 0, 26, "Text"],
Cell[7359, 282, 304, 6, 27, "Input"],
Cell[7666, 290, 4307, 113, 310, "Input"],
Cell[11976, 405, 131, 4, 27, "Input"],
Cell[CellGroupData[{
Cell[12132, 413, 272, 5, 27, "Input"],
Cell[12407, 420, 400, 12, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12844, 437, 378, 10, 27, "Input"],
Cell[13225, 449, 19709, 329, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32971, 783, 222, 4, 27, "Input"],
Cell[33196, 789, 296, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33529, 803, 294, 8, 27, "Input"],
Cell[33826, 813, 18797, 314, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52660, 1132, 148, 3, 27, "Input"],
Cell[52811, 1137, 38056, 631, 222, "Output"]
}, Open  ]],
Cell[90882, 1771, 142, 3, 26, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91073, 1780, 28, 0, 28, "Subsubtitle"],
Cell[91104, 1782, 2710, 85, 236, "Text"],
Cell[CellGroupData[{
Cell[93839, 1871, 96, 1, 43, "Subsection"],
Cell[93938, 1874, 50, 0, 26, "Text"],
Cell[CellGroupData[{
Cell[94013, 1878, 289, 9, 27, "Input"],
Cell[94305, 1889, 597, 19, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94939, 1913, 198, 6, 27, "Input"],
Cell[95140, 1921, 447, 15, 49, "Output"]
}, Open  ]],
Cell[95602, 1939, 103, 3, 26, "Text"],
Cell[95708, 1944, 204, 9, 26, "Text"],
Cell[CellGroupData[{
Cell[95937, 1957, 665, 21, 27, "Input"],
Cell[96605, 1980, 607, 19, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97249, 2004, 240, 7, 27, "Input"],
Cell[97492, 2013, 245, 8, 49, "Output"]
}, Open  ]],
Cell[97752, 2024, 43, 0, 26, "Text"],
Cell[CellGroupData[{
Cell[97820, 2028, 441, 14, 27, "Input"],
Cell[98264, 2044, 8270, 141, 38, "Output"]
}, Open  ]],
Cell[106549, 2188, 207, 7, 26, "Text"],
Cell[CellGroupData[{
Cell[106781, 2199, 156, 4, 27, "Input"],
Cell[106940, 2205, 157, 5, 50, "Output"]
}, Open  ]],
Cell[107112, 2213, 95, 2, 26, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107256, 2221, 94, 1, 28, "Subsubtitle"],
Cell[107353, 2224, 1238, 42, 97, "Text"],
Cell[CellGroupData[{
Cell[108616, 2270, 30, 0, 43, "Subsection"],
Cell[108649, 2272, 241, 7, 41, "Text"],
Cell[108893, 2281, 144, 2, 27, "Input"],
Cell[109040, 2285, 732, 22, 43, "Input"],
Cell[109775, 2309, 322, 8, 27, "Input"],
Cell[CellGroupData[{
Cell[110122, 2321, 328, 10, 27, "Input"],
Cell[110453, 2333, 2251, 44, 236, "Output"]
}, Open  ]],
Cell[112719, 2380, 72, 0, 26, "Text"],
Cell[CellGroupData[{
Cell[112816, 2384, 262, 8, 27, "Input"],
Cell[113081, 2394, 215, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113333, 2404, 457, 13, 27, "Input"],
Cell[113793, 2419, 5937, 105, 238, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119791, 2531, 97, 1, 28, "Subsubtitle"],
Cell[119891, 2534, 273, 8, 49, "Text"],
Cell[120167, 2544, 569, 22, 30, "Text"],
Cell[CellGroupData[{
Cell[120761, 2570, 96, 1, 43, "Subsection"],
Cell[120860, 2573, 1831, 68, 94, "Text"],
Cell[CellGroupData[{
Cell[122716, 2645, 528, 17, 43, "Input"],
Cell[123247, 2664, 761, 23, 51, "Output"]
}, Open  ]],
Cell[124023, 2690, 641, 22, 48, "Text"],
Cell[CellGroupData[{
Cell[124689, 2716, 147, 5, 27, "Input"],
Cell[124839, 2723, 716, 25, 46, "Output"]
}, Open  ]],
Cell[125570, 2751, 1007, 39, 86, "Text"],
Cell[CellGroupData[{
Cell[126602, 2794, 225, 7, 27, "Input"],
Cell[126830, 2803, 131, 4, 27, "Output"]
}, Open  ]],
Cell[126976, 2810, 3124, 105, 176, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130149, 2921, 96, 1, 28, "Subsubtitle"],
Cell[130248, 2924, 690, 25, 49, "Text",
 CellTags->"i:106"],
Cell[130941, 2951, 413, 17, 46, "Text"],
Cell[131357, 2970, 1088, 41, 69, "Text"],
Cell[CellGroupData[{
Cell[132470, 3015, 30, 0, 43, "Subsection"],
Cell[132503, 3017, 74, 1, 31, "Input"],
Cell[132580, 3020, 3455, 115, 242, "Text"],
Cell[136038, 3137, 26, 0, 31, "Input"],
Cell[136067, 3139, 485, 16, 72, "Input"],
Cell[136555, 3157, 141, 1, 30, "Text"],
Cell[136699, 3160, 955, 27, 55, "Input"],
Cell[137657, 3189, 347, 9, 30, "Text"],
Cell[CellGroupData[{
Cell[138029, 3202, 77, 2, 31, "Input"],
Cell[138109, 3206, 970, 15, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139116, 3226, 119, 3, 31, "Input"],
Cell[139238, 3231, 924, 14, 92, "Output"]
}, Open  ]],
Cell[140177, 3248, 147, 5, 31, "Input"],
Cell[140327, 3255, 414, 12, 49, "Text"],
Cell[140744, 3269, 499, 17, 72, "Input"],
Cell[CellGroupData[{
Cell[141268, 3290, 129, 2, 31, "Input"],
Cell[141400, 3294, 31674, 472, 942, "Output"]
}, Open  ]],
Cell[173089, 3769, 772, 26, 49, "Text"],
Cell[173864, 3797, 239, 8, 30, "Text"],
Cell[174106, 3807, 640, 22, 72, "Input"],
Cell[174749, 3831, 58, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[174832, 3835, 120, 3, 31, "Input"],
Cell[174955, 3840, 2226, 42, 192, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177218, 3887, 383, 12, 31, "Input"],
Cell[177604, 3901, 5934, 158, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183575, 4064, 155, 3, 31, "Input"],
Cell[183733, 4069, 1270, 25, 237, "Output"]
}, Open  ]],
Cell[185018, 4097, 244, 7, 31, "Text"],
Cell[CellGroupData[{
Cell[185287, 4108, 566, 18, 31, "Input"],
Cell[185856, 4128, 1955, 63, 77, "Output"]
}, Open  ]],
Cell[187826, 4194, 226, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[188077, 4205, 197, 6, 31, "Input"],
Cell[188277, 4213, 13383, 226, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201697, 4444, 147, 3, 31, "Input"],
Cell[201847, 4449, 14430, 245, 238, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216338, 4701, 100, 1, 28, "Subsubtitle"],
Cell[216441, 4704, 484, 13, 51, "Text"],
Cell[CellGroupData[{
Cell[216950, 4721, 98, 1, 43, "Subsection"],
Cell[217051, 4724, 141, 2, 27, "Input"],
Cell[217195, 4728, 154, 3, 26, "Text"],
Cell[217352, 4733, 306, 8, 27, "Input"],
Cell[217661, 4743, 364, 9, 26, "Text"],
Cell[CellGroupData[{
Cell[218050, 4756, 449, 12, 27, "Input"],
Cell[218502, 4770, 312, 10, 30, "Output"]
}, Open  ]],
Cell[218829, 4783, 504, 17, 26, "Text"],
Cell[CellGroupData[{
Cell[219358, 4804, 456, 13, 27, "Input"],
Cell[219817, 4819, 203, 7, 50, "Output"]
}, Open  ]],
Cell[220035, 4829, 87, 1, 26, "Text"],
Cell[CellGroupData[{
Cell[220147, 4834, 399, 12, 27, "Input"],
Cell[220549, 4848, 73, 1, 27, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
